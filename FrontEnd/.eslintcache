[{"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\index.js":"1","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\MetroApp.js":"2","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AppRouter.js":"3","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\DashboardRouter.js":"4","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\CreateUserScreen.js":"5","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginScreen.js":"6","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\NavbarAdmin.js":"7","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Navbar.js":"8","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\HomeArticlesScreen.js":"9","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\room\\RoomScreen.js":"10","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\BuyScreen.js":"11","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\kitchen\\KitchenScreen.js":"12","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useCounter.js":"13","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useForm.js":"14","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\firebase\\firebase-config.js":"15","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\authReducer.js":"16","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\types\\types.js":"17","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\AuthContext.js":"18","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\clientAuth.js":"19","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminKitchen\\AdminKitchenScreen.js":"20","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\AdminRoomScreen.js":"21","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\FormProduct.js":"22","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdminRouter.js":"23","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\Delete.js":"24","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\NewProduct.js":"25","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\Sidebar.js":"26"},{"size":197,"mtime":1612472036971,"results":"27","hashOfConfig":"28"},{"size":540,"mtime":1612594927553,"results":"29","hashOfConfig":"28"},{"size":1291,"mtime":1612844434532,"results":"30","hashOfConfig":"28"},{"size":959,"mtime":1612844261054,"results":"31","hashOfConfig":"28"},{"size":4532,"mtime":1612603817592,"results":"32","hashOfConfig":"28"},{"size":3378,"mtime":1612599123146,"results":"33","hashOfConfig":"28"},{"size":1073,"mtime":1612844128717,"results":"34","hashOfConfig":"28"},{"size":2976,"mtime":1612639325094,"results":"35","hashOfConfig":"28"},{"size":6036,"mtime":1612639623422,"results":"36","hashOfConfig":"28"},{"size":3370,"mtime":1611373550124,"results":"37","hashOfConfig":"28"},{"size":1729,"mtime":1612055400220,"results":"38","hashOfConfig":"28"},{"size":3376,"mtime":1611373497589,"results":"39","hashOfConfig":"28"},{"size":473,"mtime":1611958713651,"results":"40","hashOfConfig":"28"},{"size":531,"mtime":1612808725498,"results":"41","hashOfConfig":"28"},{"size":655,"mtime":1612481800228,"results":"42","hashOfConfig":"28"},{"size":411,"mtime":1612555522344,"results":"43","hashOfConfig":"28"},{"size":82,"mtime":1612555355753,"results":"44","hashOfConfig":"28"},{"size":86,"mtime":1612555748916,"results":"45","hashOfConfig":"28"},{"size":1066,"mtime":1612584914270,"results":"46","hashOfConfig":"28"},{"size":2600,"mtime":1612741319568,"results":"47","hashOfConfig":"28"},{"size":1219,"mtime":1612843368863,"results":"48","hashOfConfig":"28"},{"size":7484,"mtime":1612831071825,"results":"49","hashOfConfig":"28"},{"size":1577,"mtime":1612843882757,"results":"50","hashOfConfig":"28"},{"size":545,"mtime":1612819311389,"results":"51","hashOfConfig":"28"},{"size":6703,"mtime":1612839620421,"results":"52","hashOfConfig":"28"},{"size":930,"mtime":1612842375971,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"hpuued",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\index.js",[],["117","118"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\MetroApp.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AppRouter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\DashboardRouter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\CreateUserScreen.js",["119","120"],"import React, { useEffect, useState } from 'react'\r\nimport { clientRegister } from '../../auth/clientAuth';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const CreateUserScreen = ({ history }) => {\r\n    \r\n    const [values, handleInputChange] = useForm({\r\n        name: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        uid:'',\r\n    });\r\n\r\n    const { email, password, name, lastName, uid } = values;\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        clientRegister(email, password, name, lastName);\r\n        // addClient();\r\n        history.push('/HomeArticlesScreen');\r\n        // const _id = localStorage.setItem('body', JSON.stringify(body._id));\r\n    }\r\n    \r\n    const addClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`, {\r\n            method: 'POST',\r\n            headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                uid,\r\n                name,\r\n                lastName,\r\n                password,\r\n                email\r\n            }),\r\n        });\r\n        setBody(body);\r\n        // const body = await resp.json();\r\n        // console.log(body._id);\r\n        // getClient(body._id);\r\n    }\r\n    const [body, setBody] = useState(addClient)\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"login-area col col-lg-6 col-md-8 col-sm-11\">\r\n                    <div className=\"box\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <fieldset>\r\n                                <legend>Creater a User</legend>\r\n                                <div className=\"form-group row\">\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Name..\"\r\n                                        value={name}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Last Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"lastName\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Last Name..\"\r\n                                        value={lastName}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Email address</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter email..\"\r\n                                        value={email}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Password\"\r\n                                        value={password}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Create a user</button>\r\n                            </fieldset>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* {(history.push('/HomeArticlesScreen')) && handleSubmit()} */}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginScreen.js",["121","122","123","124"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { clientLogin } from '../../auth/clientAuth';\r\nimport { types } from '../../types/types';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n    const {dispatch} = useContext(AuthContext);\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password} = values;\r\n\r\n    const addClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                email\r\n            }),\r\n        });\r\n\r\n        const body = await resp.json();\r\n        localStorage.setItem('body', JSON.stringify (body._id));\r\n        \r\n    }\r\n    \r\n    // const [body, setBody] = useState(addClient)\r\n    // const {name} = body;\r\n    \r\n    const handleSubmit = (e) => {\r\n        // clientLogin(email, password);\r\n        e.preventDefault();\r\n        // console.log(body);\r\n        dispatch({\r\n            type: types.login,\r\n            // payload: localStorage.setItem('user', JSON.stringify (user.uid))\r\n        });\r\n    }\r\n        \r\n\r\n    useEffect(() => {\r\n    }, [])\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"login-area col col-lg-6 col-md-8 col-sm-11\">\r\n                    <div className=\"box\">\r\n                        <form>\r\n                        {/* <form onSubmit={handleSubmit}> */}\r\n                            <fieldset>\r\n                                <legend>Login User</legend>\r\n                                <div className=\"form-group row\">\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Email address</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter email..\"\r\n                                        value={email}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Password\"\r\n                                        value={password}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Login user</button>\r\n                            </fieldset>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\NavbarAdmin.js",["125","126","127","128"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const NavbarAdmin = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\r\n           \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle m-3\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            My Account\r\n                        </a>\r\n                        <div className=\"dropdown-menu dropdown-menu-right m-2\" aria-labelledby=\"navbarDropdown\">\r\n                            <a className=\"dropdown-item\" href=\"#\">Logout</a>\r\n                            <a className=\"dropdown-item\" href=\"#\">Perfil</a>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Navbar.js",["129","130"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    // console.log(id);\r\n    const id = JSON.parse(localStorage.getItem('body'));\r\n    \r\n    useEffect(() => { \r\n        getClient(id);\r\n    }, [useState])\r\n    // localStorage.setItem('body', JSON.stringify (body._id));\r\n    \r\n    const getClient = async (id) => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`);\r\n        const body = await resp.json();\r\n        // console.log(body._id);\r\n        setBody(body);\r\n    }\r\n    \r\n    const [body, setBody] = useState(getClient)\r\n\r\n    const {name} = body;\r\n\r\n    const handleLogout = () =>{\r\n        \r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary navbar mt-2\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    <img src={'./assets/img/1.png'} style={{ width: 70, marginTop: -7 }} alt=\"...\" />\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div className=\"navbar-nav\">\r\n                        <Link to=\"/\" className=\"nav-link active\" aria-current=\"page\">\r\n                            <h4>\r\n                                Home\r\n                            </h4>\r\n                        </Link>\r\n                        <Link to=\"/KitchenScreen\" className=\"nav-link\" >\r\n                            <h4>\r\n                                Kitchen\r\n                            </h4>\r\n                        </Link>\r\n                        <Link to=\"/RoomScreen\" className=\"nav-link\" >\r\n                            <h4>\r\n                                Room\r\n                            </h4>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end w-100\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li\r\n                                className=\"nav-item nav-link\"\r\n                            >\r\n                                {name}\r\n                            </li>\r\n                            <button\r\n                                type=\"submite\"\r\n                                className=\"btn nav-item nav-link\"\r\n                            >\r\n                                LogOut\r\n                            </button>\r\n                            <ul className=\"navbar-nav\">\r\n                        </ul>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\HomeArticlesScreen.js",["131","132","133","134"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// import { userRegister } from '../../auth/userAuth'\r\n\r\n// const {iud} = userRegister;\r\n\r\n\r\nexport const HomeArticlesScreen = ({ history }) => {\r\n    // const id = JSON.parse(localStorage.getItem('user'));\r\n    // console.log('id de firebase ' + id);\r\n    \r\n    // useEffect(() => { \r\n    //     // getClient(id);\r\n    //     // editClient(_id);\r\n    // }, [useState])\r\n    // localStorage.setItem('body', JSON.stringify (body._id));\r\n    \r\n    const getClient = async (id) => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`);\r\n        const body = await resp.json();\r\n        // console.log(body._id);\r\n        // setBody(body);\r\n    }\r\n    \r\n    // const [body, setBody] = useState(getClient)\r\n\r\n    // const {_id} = body;\r\n    // console.log('id Base ' + _id);\r\n\r\n    // const uid = JSON.parse(localStorage.getItem('user'));\r\n    // const id = JSON.parse(localStorage.getItem('body'));\r\n    // useEffect(() => {\r\n        // editClient(uid);\r\n        // JSON.parse(localStorage.getItem(iud));\r\n    // }, [useState])\r\n    \r\n    // const _id = JSON.parse(localStorage.getItem('body'));\r\n    // const editClient = async (_id) => {\r\n    //     // console.log(\"HOLA \"+_id);\r\n    //     // console.log(\"HOLA \"+id);\r\n    //     const resp = await fetch(`http://localhost:4000/api/client/edit/${_id}`, {\r\n    //         method: 'PUT',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //             uid:id,\r\n    //         }),\r\n            \r\n    //     });\r\n        \r\n    //     // setBody(body);\r\n        \r\n    //     const body = await resp.json();\r\n    //     // console.log(body);\r\n    // }\r\n    // const [body, setBody] = useState(editClient)\r\n    \r\n    // localStorage.setItem('body', JSON.stringify (body._id));\r\n    \r\n\r\n    // const {name} = body;\r\n    const handleBuy = () => {\r\n        history.push('/BuyScreen');\r\n        // JSON.parse(localStorage.getItem('user', JSON.stringify ({email, name})));\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"carousel slide\" data-bs-ride=\"carousel\">\r\n                <div className=\"carousel-inner\">\r\n                    <div className=\"carousel-item active\">\r\n                        <img src={'./assets/img/1.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img src={'./assets/img/4.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img src={'./assets/img/5.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n\r\n                    <div className=\"col home-area m-1\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Card title</h4>\r\n                                <img src={'./assets/img/2.jpg'} width=\"100%\" height=\"100%\" alt=\"...\" />\r\n                                <hr />\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                <button type=\"button\" className=\"btn btn-link\" onClick={handleBuy}>More info</button>\r\n                                <button type=\"button\" className=\"btn btn-link\" onClick={handleBuy}>Buy</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col home-area m-1\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Card title</h4>\r\n                                <svg xmlns=\"\" className=\"d-block user-select-none\" width=\"100%\" height=\"110\" aria-label=\"Placeholder: Image cap\" focusable=\"false\" role=\"img\" preserveAspectRatio=\"xMidYMid slice\" viewBox=\"0 0 318 180\" />\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                <Link to=\"/\" className=\"card-link\">Card link</Link>\r\n                                <Link to=\"/\" className=\"card-link\">Another link</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col home-area m-1\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Card title</h4>\r\n                                <svg xmlns=\"\" className=\"d-block user-select-none\" width=\"100%\" height=\"110\" aria-label=\"Placeholder: Image cap\" focusable=\"false\" role=\"img\" preserveAspectRatio=\"xMidYMid slice\" viewBox=\"0 0 318 180\" />\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                <Link to=\"/\" className=\"card-link\">Card link</Link>\r\n                                <Link to=\"/\" className=\"card-link\">Another link</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\room\\RoomScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\BuyScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\kitchen\\KitchenScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useCounter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useForm.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\firebase\\firebase-config.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\authReducer.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\types\\types.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\AuthContext.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\clientAuth.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminKitchen\\AdminKitchenScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\AdminRoomScreen.js",["135","136","137"],"import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nexport const AdminRoomScreen = () => {\r\n    const [product, setProduct] = useState(null || []);\r\n    // const category = getCategoryProduct(categories);\r\n\r\n    useEffect(() => {\r\n        getPoducts();\r\n    }, []);\r\n\r\n    const getPoducts = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product`);\r\n        const body = await resp.json();\r\n        setProduct(body);\r\n    }\r\n    return (\r\n        <div className=\"mt-5\" >\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">First</th>\r\n                        <th scope=\"col\">Last</th>\r\n                        <th scope=\"col\">Handle</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Mark</td>\r\n                        <td>Otto</td>\r\n                        <td>@mdo</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\FormProduct.js",["138","139","140"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const FormProduct = () => {\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        editProduct();\r\n        reset();\r\n    }\r\n    \r\n    const { id } = useParams();\r\n    \r\n    useEffect(() => {\r\n        getProduct();\r\n    }, [id]);\r\n    \r\n    const [values, handleInputChange, loadDataForm, reset, setValues] = useForm({\r\n        name: '',\r\n        nameCategory: '',\r\n        description: '',\r\n        price: '',\r\n        quantityInStock: '',\r\n        urlImg: '',\r\n        spent: ''\r\n    });\r\n    \r\n    const { name, nameCategory, description, price, quantityInStock, urlImg, spent } = values;\r\n\r\n    const getProduct = async () => {\r\n        // console.log(id);\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`);\r\n        const body = await resp.json();\r\n        // const {name} = !!body && body[0];\r\n        loadDataForm(body);\r\n    }\r\n\r\n    const editProduct = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: values.name,\r\n                nameCategory: values.nameCategory,\r\n                description: values.description,\r\n                price: values.price,\r\n                quantityInStock: values.quantityInStock,\r\n                spent: values.spent,\r\n                urlImg: values.urlImg\r\n            }),\r\n            });\r\n    \r\n        const body = await resp.json();\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"login-area col col-lg-6 col-md-8 col-sm-11\">\r\n                        <div className=\"box\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <fieldset>\r\n                                    <legend>Edit a Product</legend>\r\n                                    <div className=\"form-group row\">\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Name..\"\r\n                                            value={name}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"description\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Description..\"\r\n                                            value={description}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"price\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Price..\"\r\n                                            value={price}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Spent</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"spent\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Spent..\"\r\n                                            value={spent}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name Category</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"nameCategory\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Name Category...\"\r\n                                            value={nameCategory}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Quantity In Stock</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"quantityInStock\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Quantity In Stock...\"\r\n                                            value={quantityInStock}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Url Image</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"urlImg\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Url Image\"\r\n                                            value={urlImg}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    {/* <button type=\"submit\" className=\"btn btn-primary\">Create</button> */}\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Aceppt</button>\r\n                                    <Link to=\"/admin/AdminRoom\" type=\"button\" className=\"btn btn-danger\">Back</Link>\r\n                                </fieldset>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdminRouter.js",["141"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\Delete.js",["142","143"],"import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport const Delete = () => {\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n            deleteProduct();\r\n    }, [id])\r\n        \r\n    const deleteProduct = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n    \r\n        // const body = await resp.json();\r\n    }    \r\n    return (\r\n        <div>\r\n            <h1>Eliminado</h1>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\NewProduct.js",["144","145"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const NewProduct = () => {\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProduct();\r\n        reset();\r\n        console.log(values);\r\n    }\r\n\r\n    const [values, handleInputChange, reset, setValues] = useForm({\r\n        name: '',\r\n        nameCategory: '',\r\n        description: '',\r\n        price: '',\r\n        quantityInStock: '',\r\n        urlImg: '',\r\n        spent: ''\r\n    });\r\n\r\n    const { name, nameCategory, description, price, quantityInStock, urlImg, spent } = values;\r\n    console.log(name);\r\n\r\n    const createProduct = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \r\n            }),\r\n        });\r\n\r\n        const body = await resp.json();\r\n        console.log(body);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"login-area col col-lg-6 col-md-8 col-sm-11\">\r\n                        <div className=\"box\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <fieldset>\r\n                                    <legend>Create a Product</legend>\r\n                                    <div className=\"form-group row\">\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Name..\"\r\n                                            value={name}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"description\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Description..\"\r\n                                            value={description}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"price\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Price..\"\r\n                                            value={price}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Spent</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"spent\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Spent..\"\r\n                                            value={spent}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name Category</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"nameCategory\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Name Category...\"\r\n                                            value={nameCategory}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Quantity In Stock</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"quantityInStock\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Quantity In Stock...\"\r\n                                            value={quantityInStock}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Url Image</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"urlImg\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Url Image\"\r\n                                            value={urlImg}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n                                    <Link to=\"/admin/AdminRoom\" type=\"button\" className=\"btn btn-danger\">Back</Link>\r\n                                </fieldset>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\Sidebar.js",["146","147","148","149","150","151"],"import React from 'react'\r\n\r\nexport const Sidebar = () => {\r\n    return (\r\n        <div className=\"bg-light border-right\" id=\"sidebar-wrapper\">\r\n            <div className=\"sidebar-heading\">Start Bootstrap </div>\r\n            <div className=\"list-group list-group-flush\">\r\n                <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Dashboard</a>\r\n                <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Shortcuts</a>\r\n                <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Overview</a>\r\n                <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Events</a>\r\n                <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Profile</a>\r\n                <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Status</a>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"160","line":26,"column":15,"nodeType":"158","messageId":"159","endLine":26,"endColumn":19},{"ruleId":"156","severity":1,"message":"161","line":1,"column":40,"nodeType":"158","messageId":"159","endLine":1,"endColumn":48},{"ruleId":"156","severity":1,"message":"162","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":21},{"ruleId":"156","severity":1,"message":"163","line":17,"column":11,"nodeType":"158","messageId":"159","endLine":17,"endColumn":20},{"ruleId":"156","severity":1,"message":"164","line":37,"column":11,"nodeType":"158","messageId":"159","endLine":37,"endColumn":23},{"ruleId":"156","severity":1,"message":"165","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"167","line":11,"column":25,"nodeType":"168","endLine":11,"endColumn":178},{"ruleId":"166","severity":1,"message":"167","line":15,"column":29,"nodeType":"168","endLine":15,"endColumn":67},{"ruleId":"166","severity":1,"message":"167","line":16,"column":29,"nodeType":"168","endLine":16,"endColumn":67},{"ruleId":"169","severity":1,"message":"170","line":10,"column":8,"nodeType":"171","endLine":10,"endColumn":18,"suggestions":"172"},{"ruleId":"156","severity":1,"message":"173","line":24,"column":11,"nodeType":"158","messageId":"159","endLine":24,"endColumn":23},{"ruleId":"156","severity":1,"message":"157","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"161","line":1,"column":28,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"174","line":18,"column":11,"nodeType":"158","messageId":"159","endLine":18,"endColumn":20},{"ruleId":"156","severity":1,"message":"175","line":20,"column":15,"nodeType":"158","messageId":"159","endLine":20,"endColumn":19},{"ruleId":"156","severity":1,"message":"165","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"156","severity":1,"message":"176","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":25},{"ruleId":"156","severity":1,"message":"177","line":5,"column":12,"nodeType":"158","messageId":"159","endLine":5,"endColumn":19},{"ruleId":"169","severity":1,"message":"178","line":19,"column":8,"nodeType":"171","endLine":19,"endColumn":12,"suggestions":"179"},{"ruleId":"156","severity":1,"message":"180","line":21,"column":60,"nodeType":"158","messageId":"159","endLine":21,"endColumn":69},{"ruleId":"156","severity":1,"message":"175","line":58,"column":15,"nodeType":"158","messageId":"159","endLine":58,"endColumn":19},{"ruleId":"156","severity":1,"message":"181","line":3,"column":22,"nodeType":"158","messageId":"159","endLine":3,"endColumn":28},{"ruleId":"169","severity":1,"message":"182","line":9,"column":8,"nodeType":"171","endLine":9,"endColumn":12,"suggestions":"183"},{"ruleId":"156","severity":1,"message":"160","line":12,"column":15,"nodeType":"158","messageId":"159","endLine":12,"endColumn":19},{"ruleId":"156","severity":1,"message":"157","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"180","line":14,"column":46,"nodeType":"158","messageId":"159","endLine":14,"endColumn":55},{"ruleId":"166","severity":1,"message":"167","line":8,"column":17,"nodeType":"168","endLine":8,"endColumn":89},{"ruleId":"166","severity":1,"message":"167","line":9,"column":17,"nodeType":"168","endLine":9,"endColumn":89},{"ruleId":"166","severity":1,"message":"167","line":10,"column":17,"nodeType":"168","endLine":10,"endColumn":89},{"ruleId":"166","severity":1,"message":"167","line":11,"column":17,"nodeType":"168","endLine":11,"endColumn":89},{"ruleId":"166","severity":1,"message":"167","line":12,"column":17,"nodeType":"168","endLine":12,"endColumn":89},{"ruleId":"166","severity":1,"message":"167","line":13,"column":17,"nodeType":"168","endLine":13,"endColumn":89},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'resp' is assigned a value but never used.","'useState' is defined but never used.","'clientLogin' is defined but never used.","'addClient' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. Outer scope values like 'useState' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["186"],"'handleLogout' is assigned a value but never used.","'getClient' is assigned a value but never used.","'body' is assigned a value but never used.","'useParams' is defined but never used.","'product' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["187"],"'setValues' is assigned a value but never used.","'Router' is defined but never used.","React Hook useEffect has a missing dependency: 'deleteProduct'. Either include it or remove the dependency array.",["188"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [id]",{"range":"195","text":"196"},"Update the dependencies array to be: [getProduct, id]",{"range":"197","text":"198"},"Update the dependencies array to be: [deleteProduct, id]",{"range":"199","text":"200"},[272,282],"[id]",[433,437],"[getProduct, id]",[217,221],"[deleteProduct, id]"]