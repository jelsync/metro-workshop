[{"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\index.js":"1","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\MetroApp.js":"2","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AppRouter.js":"3","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\DashboardRouter.js":"4","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\CreateUserScreen.js":"5","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginScreen.js":"6","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\NavbarAdmin.js":"7","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Navbar.js":"8","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\HomeArticlesScreen.js":"9","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\room\\RoomScreen.js":"10","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\BuyScreen.js":"11","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\kitchen\\KitchenScreen.js":"12","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useCounter.js":"13","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useForm.js":"14","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\firebase\\firebase-config.js":"15","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\authReducer.js":"16","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\types\\types.js":"17","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\AuthContext.js":"18","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\clientAuth.js":"19","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminKitchen\\AdminKitchenScreen.js":"20"},{"size":197,"mtime":1612472036971,"results":"21","hashOfConfig":"22"},{"size":540,"mtime":1612594927553,"results":"23","hashOfConfig":"22"},{"size":1532,"mtime":1612641396520,"results":"24","hashOfConfig":"22"},{"size":967,"mtime":1612640520216,"results":"25","hashOfConfig":"22"},{"size":4532,"mtime":1612603817592,"results":"26","hashOfConfig":"22"},{"size":3378,"mtime":1612599123146,"results":"27","hashOfConfig":"22"},{"size":583,"mtime":1612640021983,"results":"28","hashOfConfig":"22"},{"size":2976,"mtime":1612639325094,"results":"29","hashOfConfig":"22"},{"size":6036,"mtime":1612639623422,"results":"30","hashOfConfig":"22"},{"size":3370,"mtime":1611373550124,"results":"31","hashOfConfig":"22"},{"size":1729,"mtime":1612055400220,"results":"32","hashOfConfig":"22"},{"size":3376,"mtime":1611373497589,"results":"33","hashOfConfig":"22"},{"size":473,"mtime":1611958713651,"results":"34","hashOfConfig":"22"},{"size":358,"mtime":1612416352836,"results":"35","hashOfConfig":"22"},{"size":655,"mtime":1612481800228,"results":"36","hashOfConfig":"22"},{"size":411,"mtime":1612555522344,"results":"37","hashOfConfig":"22"},{"size":82,"mtime":1612555355753,"results":"38","hashOfConfig":"22"},{"size":86,"mtime":1612555748916,"results":"39","hashOfConfig":"22"},{"size":1066,"mtime":1612584914270,"results":"40","hashOfConfig":"22"},{"size":2956,"mtime":1612740827629,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"hpuued",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\index.js",[],["88","89"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\MetroApp.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AppRouter.js",["90"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { CreateUserScreen } from \"../components/login/CreateUserScreen\";\r\nimport { DashboardRouter } from \"./DashboardRouter\";\r\nimport { NavbarAdmin } from \"../components/userInterface/NavbarAdmin\";\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { clientLogin } from \"../auth/clientAuth\";\r\nimport { AdminKitchenScreen } from \"../components/adminKitchen/AdminKitchenScreen\";\r\n\r\nexport const AppRouter = () => {\r\n    const [loggInd, setLoggInd] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user?.uid) {\r\n                clientLogin(user.email, user.uid);\r\n                setLoggInd(true);\r\n            } else {\r\n                setLoggInd(false);\r\n            }\r\n        });\r\n    }, [setLoggInd])\r\n\r\n    return (\r\n        <Router>\r\n            <NavbarAdmin/>\r\n            <Switch>\r\n                <Route exact path=\"/AdminKitchen\" component={AdminKitchenScreen} />\r\n\r\n                <Route exact path=\"/login\" component={LoginScreen} />\r\n                <Route exact path=\"/CreateUserScreen\" component={CreateUserScreen} />\r\n\r\n                {/* <Route exact path=\"/admin\" component={NavbarAdmin} /> */}\r\n\r\n                <Route path=\"/\" component={DashboardRouter} />\r\n\r\n            </Switch>\r\n\r\n        </Router>\r\n\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\DashboardRouter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\CreateUserScreen.js",["91","92"],"import React, { useEffect, useState } from 'react'\r\nimport { clientRegister } from '../../auth/clientAuth';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const CreateUserScreen = ({ history }) => {\r\n    \r\n    const [values, handleInputChange] = useForm({\r\n        name: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        uid:'',\r\n    });\r\n\r\n    const { email, password, name, lastName, uid } = values;\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        clientRegister(email, password, name, lastName);\r\n        // addClient();\r\n        history.push('/HomeArticlesScreen');\r\n        // const _id = localStorage.setItem('body', JSON.stringify(body._id));\r\n    }\r\n    \r\n    const addClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`, {\r\n            method: 'POST',\r\n            headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                uid,\r\n                name,\r\n                lastName,\r\n                password,\r\n                email\r\n            }),\r\n        });\r\n        setBody(body);\r\n        // const body = await resp.json();\r\n        // console.log(body._id);\r\n        // getClient(body._id);\r\n    }\r\n    const [body, setBody] = useState(addClient)\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"login-area col col-lg-6 col-md-8 col-sm-11\">\r\n                    <div className=\"box\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <fieldset>\r\n                                <legend>Creater a User</legend>\r\n                                <div className=\"form-group row\">\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Name..\"\r\n                                        value={name}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Last Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"lastName\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Last Name..\"\r\n                                        value={lastName}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Email address</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter email..\"\r\n                                        value={email}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Password\"\r\n                                        value={password}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Create a user</button>\r\n                            </fieldset>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* {(history.push('/HomeArticlesScreen')) && handleSubmit()} */}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginScreen.js",["93","94","95","96"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { clientLogin } from '../../auth/clientAuth';\r\nimport { types } from '../../types/types';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n    const {dispatch} = useContext(AuthContext);\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password} = values;\r\n\r\n    const addClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                email\r\n            }),\r\n        });\r\n\r\n        const body = await resp.json();\r\n        localStorage.setItem('body', JSON.stringify (body._id));\r\n        \r\n    }\r\n    \r\n    // const [body, setBody] = useState(addClient)\r\n    // const {name} = body;\r\n    \r\n    const handleSubmit = (e) => {\r\n        // clientLogin(email, password);\r\n        e.preventDefault();\r\n        // console.log(body);\r\n        dispatch({\r\n            type: types.login,\r\n            // payload: localStorage.setItem('user', JSON.stringify (user.uid))\r\n        });\r\n    }\r\n        \r\n\r\n    useEffect(() => {\r\n    }, [])\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"login-area col col-lg-6 col-md-8 col-sm-11\">\r\n                    <div className=\"box\">\r\n                        <form>\r\n                        {/* <form onSubmit={handleSubmit}> */}\r\n                            <fieldset>\r\n                                <legend>Login User</legend>\r\n                                <div className=\"form-group row\">\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Email address</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter email..\"\r\n                                        value={email}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Password\"\r\n                                        value={password}\r\n                                        onChange={handleInputChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Login user</button>\r\n                            </fieldset>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\NavbarAdmin.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Navbar.js",["97","98"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    // console.log(id);\r\n    const id = JSON.parse(localStorage.getItem('body'));\r\n    \r\n    useEffect(() => { \r\n        getClient(id);\r\n    }, [useState])\r\n    // localStorage.setItem('body', JSON.stringify (body._id));\r\n    \r\n    const getClient = async (id) => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`);\r\n        const body = await resp.json();\r\n        // console.log(body._id);\r\n        setBody(body);\r\n    }\r\n    \r\n    const [body, setBody] = useState(getClient)\r\n\r\n    const {name} = body;\r\n\r\n    const handleLogout = () =>{\r\n        \r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary navbar mt-2\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    <img src={'./assets/img/1.png'} style={{ width: 70, marginTop: -7 }} alt=\"...\" />\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div className=\"navbar-nav\">\r\n                        <Link to=\"/\" className=\"nav-link active\" aria-current=\"page\">\r\n                            <h4>\r\n                                Home\r\n                            </h4>\r\n                        </Link>\r\n                        <Link to=\"/KitchenScreen\" className=\"nav-link\" >\r\n                            <h4>\r\n                                Kitchen\r\n                            </h4>\r\n                        </Link>\r\n                        <Link to=\"/RoomScreen\" className=\"nav-link\" >\r\n                            <h4>\r\n                                Room\r\n                            </h4>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end w-100\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li\r\n                                className=\"nav-item nav-link\"\r\n                            >\r\n                                {name}\r\n                            </li>\r\n                            <button\r\n                                type=\"submite\"\r\n                                className=\"btn nav-item nav-link\"\r\n                            >\r\n                                LogOut\r\n                            </button>\r\n                            <ul className=\"navbar-nav\">\r\n                        </ul>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\HomeArticlesScreen.js",["99","100","101","102"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// import { userRegister } from '../../auth/userAuth'\r\n\r\n// const {iud} = userRegister;\r\n\r\n\r\nexport const HomeArticlesScreen = ({ history }) => {\r\n    // const id = JSON.parse(localStorage.getItem('user'));\r\n    // console.log('id de firebase ' + id);\r\n    \r\n    // useEffect(() => { \r\n    //     // getClient(id);\r\n    //     // editClient(_id);\r\n    // }, [useState])\r\n    // localStorage.setItem('body', JSON.stringify (body._id));\r\n    \r\n    const getClient = async (id) => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`);\r\n        const body = await resp.json();\r\n        // console.log(body._id);\r\n        // setBody(body);\r\n    }\r\n    \r\n    // const [body, setBody] = useState(getClient)\r\n\r\n    // const {_id} = body;\r\n    // console.log('id Base ' + _id);\r\n\r\n    // const uid = JSON.parse(localStorage.getItem('user'));\r\n    // const id = JSON.parse(localStorage.getItem('body'));\r\n    // useEffect(() => {\r\n        // editClient(uid);\r\n        // JSON.parse(localStorage.getItem(iud));\r\n    // }, [useState])\r\n    \r\n    // const _id = JSON.parse(localStorage.getItem('body'));\r\n    // const editClient = async (_id) => {\r\n    //     // console.log(\"HOLA \"+_id);\r\n    //     // console.log(\"HOLA \"+id);\r\n    //     const resp = await fetch(`http://localhost:4000/api/client/edit/${_id}`, {\r\n    //         method: 'PUT',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //             uid:id,\r\n    //         }),\r\n            \r\n    //     });\r\n        \r\n    //     // setBody(body);\r\n        \r\n    //     const body = await resp.json();\r\n    //     // console.log(body);\r\n    // }\r\n    // const [body, setBody] = useState(editClient)\r\n    \r\n    // localStorage.setItem('body', JSON.stringify (body._id));\r\n    \r\n\r\n    // const {name} = body;\r\n    const handleBuy = () => {\r\n        history.push('/BuyScreen');\r\n        // JSON.parse(localStorage.getItem('user', JSON.stringify ({email, name})));\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"carousel slide\" data-bs-ride=\"carousel\">\r\n                <div className=\"carousel-inner\">\r\n                    <div className=\"carousel-item active\">\r\n                        <img src={'./assets/img/1.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img src={'./assets/img/4.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img src={'./assets/img/5.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n\r\n                    <div className=\"col home-area m-1\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Card title</h4>\r\n                                <img src={'./assets/img/2.jpg'} width=\"100%\" height=\"100%\" alt=\"...\" />\r\n                                <hr />\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                <button type=\"button\" className=\"btn btn-link\" onClick={handleBuy}>More info</button>\r\n                                <button type=\"button\" className=\"btn btn-link\" onClick={handleBuy}>Buy</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col home-area m-1\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Card title</h4>\r\n                                <svg xmlns=\"\" className=\"d-block user-select-none\" width=\"100%\" height=\"110\" aria-label=\"Placeholder: Image cap\" focusable=\"false\" role=\"img\" preserveAspectRatio=\"xMidYMid slice\" viewBox=\"0 0 318 180\" />\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                <Link to=\"/\" className=\"card-link\">Card link</Link>\r\n                                <Link to=\"/\" className=\"card-link\">Another link</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col home-area m-1\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Card title</h4>\r\n                                <svg xmlns=\"\" className=\"d-block user-select-none\" width=\"100%\" height=\"110\" aria-label=\"Placeholder: Image cap\" focusable=\"false\" role=\"img\" preserveAspectRatio=\"xMidYMid slice\" viewBox=\"0 0 318 180\" />\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                <Link to=\"/\" className=\"card-link\">Card link</Link>\r\n                                <Link to=\"/\" className=\"card-link\">Another link</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\room\\RoomScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\BuyScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\kitchen\\KitchenScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useCounter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useForm.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\firebase\\firebase-config.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\authReducer.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\types\\types.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\AuthContext.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\clientAuth.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminKitchen\\AdminKitchenScreen.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":17,"column":12,"nodeType":"109","messageId":"110","endLine":17,"endColumn":19},{"ruleId":"107","severity":1,"message":"111","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"112","line":26,"column":15,"nodeType":"109","messageId":"110","endLine":26,"endColumn":19},{"ruleId":"107","severity":1,"message":"113","line":1,"column":40,"nodeType":"109","messageId":"110","endLine":1,"endColumn":48},{"ruleId":"107","severity":1,"message":"114","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":21},{"ruleId":"107","severity":1,"message":"115","line":17,"column":11,"nodeType":"109","messageId":"110","endLine":17,"endColumn":20},{"ruleId":"107","severity":1,"message":"116","line":37,"column":11,"nodeType":"109","messageId":"110","endLine":37,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":10,"column":8,"nodeType":"119","endLine":10,"endColumn":18,"suggestions":"120"},{"ruleId":"107","severity":1,"message":"121","line":24,"column":11,"nodeType":"109","messageId":"110","endLine":24,"endColumn":23},{"ruleId":"107","severity":1,"message":"111","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"113","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"122","line":18,"column":11,"nodeType":"109","messageId":"110","endLine":18,"endColumn":20},{"ruleId":"107","severity":1,"message":"123","line":20,"column":15,"nodeType":"109","messageId":"110","endLine":20,"endColumn":19},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'loggInd' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'resp' is assigned a value but never used.","'useState' is defined but never used.","'clientLogin' is defined but never used.","'addClient' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. Outer scope values like 'useState' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["126"],"'handleLogout' is assigned a value but never used.","'getClient' is assigned a value but never used.","'body' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [id]",{"range":"129","text":"130"},[272,282],"[id]"]