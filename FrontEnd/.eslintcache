[{"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\index.js":"1","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\MetroApp.js":"2","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AppRouter.js":"3","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\DashboardRouter.js":"4","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\CreateUserScreen.js":"5","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginScreen.js":"6","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\NavbarAdmin.js":"7","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Navbar.js":"8","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\HomeArticlesScreen.js":"9","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\BuyScreen.js":"10","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\kitchen\\KitchenScreen.js":"11","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useCounter.js":"12","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useForm.js":"13","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\firebase\\firebase-config.js":"14","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\authReducer.js":"15","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\types\\types.js":"16","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\AuthContext.js":"17","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\clientAuth.js":"18","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminKitchen\\AdminKitchenScreen.js":"19","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\AdminRoomScreen.js":"20","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\FormProduct.js":"21","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdminRouter.js":"22","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\Delete.js":"23","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\NewProduct.js":"24","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\Sidebar.js":"25","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateRoute.js":"26","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicRoute.js":"27","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdministratorRoute.js":"28","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\AdminClientScreen.js":"29","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\FormClient.js":"30","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginAdminScreen.js":"31","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateAdminRoute.js":"32","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicAdminRoute.js":"33","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\ProductScreen.js":"34","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\Delete.js":"35","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\category\\CategoryScreen.js":"36"},{"size":197,"mtime":1613963602879,"results":"37","hashOfConfig":"38"},{"size":659,"mtime":1614478754787,"results":"39","hashOfConfig":"38"},{"size":2033,"mtime":1614479416226,"results":"40","hashOfConfig":"38"},{"size":1096,"mtime":1619210146148,"results":"41","hashOfConfig":"38"},{"size":5427,"mtime":1614375547276,"results":"42","hashOfConfig":"38"},{"size":2895,"mtime":1617908074640,"results":"43","hashOfConfig":"38"},{"size":1247,"mtime":1613270089117,"results":"44","hashOfConfig":"38"},{"size":3805,"mtime":1619210353478,"results":"45","hashOfConfig":"38"},{"size":6236,"mtime":1618957438001,"results":"46","hashOfConfig":"38"},{"size":1599,"mtime":1617860408077,"results":"47","hashOfConfig":"38"},{"size":3752,"mtime":1619201835016,"results":"48","hashOfConfig":"38"},{"size":473,"mtime":1611958713651,"results":"49","hashOfConfig":"38"},{"size":531,"mtime":1612808725498,"results":"50","hashOfConfig":"38"},{"size":655,"mtime":1612481800228,"results":"51","hashOfConfig":"38"},{"size":561,"mtime":1614475275369,"results":"52","hashOfConfig":"38"},{"size":82,"mtime":1613967287728,"results":"53","hashOfConfig":"38"},{"size":86,"mtime":1612555748916,"results":"54","hashOfConfig":"38"},{"size":771,"mtime":1614478616173,"results":"55","hashOfConfig":"38"},{"size":3215,"mtime":1614481724469,"results":"56","hashOfConfig":"38"},{"size":3372,"mtime":1614481530943,"results":"57","hashOfConfig":"38"},{"size":7399,"mtime":1618026758772,"results":"58","hashOfConfig":"38"},{"size":1880,"mtime":1613264377967,"results":"59","hashOfConfig":"38"},{"size":946,"mtime":1617916552948,"results":"60","hashOfConfig":"38"},{"size":6677,"mtime":1612851067527,"results":"61","hashOfConfig":"38"},{"size":711,"mtime":1614481842017,"results":"62","hashOfConfig":"38"},{"size":575,"mtime":1613087781706,"results":"63","hashOfConfig":"38"},{"size":578,"mtime":1614457253850,"results":"64","hashOfConfig":"38"},{"size":613,"mtime":1613151803759,"results":"65","hashOfConfig":"38"},{"size":3251,"mtime":1617916458677,"results":"66","hashOfConfig":"38"},{"size":4963,"mtime":1613250175977,"results":"67","hashOfConfig":"38"},{"size":3343,"mtime":1614480443815,"results":"68","hashOfConfig":"38"},{"size":590,"mtime":1614479363531,"results":"69","hashOfConfig":"38"},{"size":593,"mtime":1614479333158,"results":"70","hashOfConfig":"38"},{"size":2295,"mtime":1617910065858,"results":"71","hashOfConfig":"38"},{"size":1040,"mtime":1617910601990,"results":"72","hashOfConfig":"38"},{"size":2341,"mtime":1619210962352,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"hpuued",{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"76"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\index.js",[],["161","162"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\MetroApp.js",["163","164"],"import React, { useEffect, useReducer, useState } from 'react';\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false };\r\n}\r\n\r\nexport const MetroApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init)\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n}","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AppRouter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\DashboardRouter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\CreateUserScreen.js",["165","166"],"import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\nimport Swal from 'sweetalert2'\r\nimport { firebase } from '../../firebase/firebase-config';\r\nimport { types } from '../../types/types';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\n\r\n\r\n\r\nexport const CreateUserScreen = () => {\r\n    const { dispatch} = useContext(AuthContext);\r\n\r\n    const [values, handleInputChange,] = useForm({\r\n        name: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        uid: '',\r\n    });\r\n\r\n    var { email, password, name, lastName, uid } = values;\r\n\r\n    const formValid = () => {\r\n        if (name.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a name',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (lastName.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a Last Name',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        }\r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                accion: 'registro'\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (formValid()) {\r\n            firebase.auth().createUserWithEmailAndPassword(email, password)\r\n                .then(async ({ user }) => {\r\n                    localStorage.setItem('uid', JSON.stringify(user.uid));\r\n                    await user.updateProfile({ displayName: name });\r\n                    addClient();\r\n                })\r\n                .catch(e => {\r\n                    Swal.fire('Error', e.message, 'error');\r\n                })\r\n        };\r\n    }\r\n\r\n    const addClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                uid: JSON.parse(localStorage.getItem('uid')),\r\n                name,\r\n                lastName,\r\n                password,\r\n                email\r\n            }),\r\n        });\r\n        const body = await resp.json();\r\n        localStorage.setItem('id', JSON.stringify(body._id));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-wrap mt-3\">\r\n            <div className=\"login-html\">\r\n                <label htmlFor=\"tab-2\" className=\"tab\">Sign Up</label>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"sign-up-html\">\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"user\" className=\"label\">Name</label>\r\n                            <input\r\n                                id=\"user\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                className=\"input\"\r\n                                value={name}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Last Name</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"lastName\"\r\n                                type=\"text\"\r\n                                className=\"input\"\r\n                                value={lastName}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Email Address</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                className=\"input\"\r\n                                value={email}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Password</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                className=\"input\"\r\n                                value={password}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"button\"\r\n                                value=\"Sign Up\" />\r\n                        </div>\r\n                        <div className=\"foot-lnk\">\r\n                            <Link to=\"/Login\">Back</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginScreen.js",["167"],"import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n// import { AuthContext } from '../../auth/AuthContext';\r\nimport { clientLogin } from '../../auth/clientAuth';\r\n// import { types } from '../../types/types';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const LoginScreen = ({history}) => {\r\n    // const { dispatch } = useContext(AuthContext);\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        email: 'jelsyn@gmail.com',\r\n        password: '12345',\r\n    });\r\n\r\n    const { email, password } = values;\r\n\r\n    // const addClient = async () => {\r\n    //     const resp = await fetch(`http://localhost:4000/api/client`, {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //             password,\r\n    //             email\r\n    //         }),\r\n    //     });\r\n\r\n    //     const body = await resp.json();\r\n    //     localStorage.setItem('body', JSON.stringify (body._id));\r\n\r\n    // }\r\n\r\n    // const [body, setBody] = useState(addClient)\r\n    // const {name} = body;\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        clientLogin(email, password);        \r\n    }\r\n    return (\r\n        <div className=\"login-wrap mt-3\">\r\n            <div className=\"login-html\">\r\n                <label className=\"tab\">Sign In</label>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"sign-in-html mt-4\">\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Email</label>\r\n                            <input\r\n                            name=\"email\" \r\n                            type=\"text\" \r\n                            className=\"input\"  \r\n                            value={email}\r\n                            onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Password</label>\r\n                            <input\r\n                            name=\"password\"\r\n                            type=\"password\" \r\n                            className=\"input\" \r\n                            value={password}\r\n                            onChange={handleInputChange}  />\r\n                        </div>\r\n                        <div className=\"group mt-4\">\r\n                            <input type=\"submit\" className=\"button\" value=\"Sign In\" />\r\n                        </div>\r\n                        <div className=\"hr\"></div>\r\n                        <div className=\"foot-lnk\">\r\n                            <Link to=\"/create-user\">Creater User</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\NavbarAdmin.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Navbar.js",["168","169"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\HomeArticlesScreen.js",["170","171","172","173","174","175","176"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport const HomeArticlesScreen = ({ history }) => {\r\n    const uid = JSON.parse(localStorage.getItem('uid'));\r\n    // console.log(uid);\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    // let [_id] = products;\r\n    // let { category: categoryId } = _id;\r\n    var productsFront = products.map(item => {\r\n        // console.log(item.category);\r\n        return {\r\n            ...item,\r\n            categoryId: item.category\r\n        };\r\n    });\r\n\r\n    const getClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${JSON.parse(localStorage.getItem('uid'))}`);\r\n        const body = await resp.json();\r\n        // setBody(body);\r\n    }\r\n\r\n    const getCategories = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/category`);\r\n        const body = await resp.json();\r\n        setCategories(body);\r\n        // console.log(body);\r\n    }\r\n    const getProducts = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product`);\r\n        const body = await resp.json();\r\n        setProducts(body.products);\r\n        // console.log(body.products);\r\n    }\r\n\r\n    const buy = async (product) => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${uid}/products`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(product),\r\n        });\r\n        const data = await resp.json();\r\n\r\n    }\r\n\r\n\r\n    // const {_id} = body;\r\n    // console.log('id Base ' + _id);\r\n\r\n    // const uid = JSON.parse(localStorage.getItem('user'));\r\n    // const id = JSON.parse(localStorage.getItem('body'));\r\n\r\n    useEffect(() => {\r\n        // getClient();\r\n        getCategories();\r\n        // getIdCategory();\r\n        getProducts();\r\n\r\n    }, [])\r\n\r\n    // const _id = JSON.parse(localStorage.getItem('body'));\r\n    // const editClient = async (_id) => {\r\n    //     // console.log(\"HOLA \"+_id);\r\n    //     // console.log(\"HOLA \"+id);\r\n    //     const resp = await fetch(`http://localhost:4000/api/client/edit/${_id}`, {\r\n    //         method: 'PUT',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //             uid:id,\r\n    //         }),\r\n\r\n    //     });\r\n\r\n    //     // setBody(body);\r\n\r\n    //     const body = await resp.json();\r\n    //     // console.log(body);\r\n    // }\r\n    // const [body, setBody] = useState(editClient)\r\n\r\n    // localStorage.setItem('body', JSON.stringify (body._id));\r\n\r\n\r\n    // const {name} = body;\r\n    const handleInfo = () => {\r\n        history.push('/BuyScreen');\r\n        // JSON.parse(localStorage.getItem('user', JSON.stringify ({email, name})));\r\n    }\r\n\r\n    const getState = (state) => {\r\n        if (state) {\r\n            return (\r\n                <button className=\"btn btn-success\" >\r\n                    Buy\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button className=\"btn btn-secondary\" disabled>\r\n                    Spent\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n\r\n    const getIdCategory = (name) => {\r\n        categories.map(item => {\r\n            if (name === item.name) {\r\n                // console.log(item._id);\r\n                return item._id;\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"carousel slide\" data-bs-ride=\"carousel\">\r\n                <div className=\"carousel-inner\">\r\n                    <div className=\"carousel-item active\">\r\n                        <img src={'./assets/img/1.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img src={'./assets/img/4.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img src={'./assets/img/5.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Link to=\"/ProductScreen\" className=\"btn btn-link\" >My Product</Link>\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    {\r\n                        productsFront.map((item) => {\r\n                            // getIdCategory(item.categoryId);\r\n                            // console.log(item.categoryId);\r\n                            return (\r\n                                <div key={item._id} className=\"col-md-3 m-1 text-dark\" >\r\n                                    <div className=\"col home-area m-1\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <h4 className=\"card-title\">{item.name}</h4>\r\n                                                <img src={item.urlImg} width=\"400px\" className=\"img-fluid\" />\r\n                                                <hr />\r\n                                                <h6 className=\"card-subtitle mb-2\">Price: {item.price}</h6>\r\n                                                <h6 className=\"card-subtitle mb-2 text-muted\">Category: {item.categoryId}</h6>\r\n                                                <p className=\"card-text\">{item.description}</p>\r\n                                                <button type=\"button\" className=\"btn btn-link\" onClick={handleInfo}>More info</button>\r\n                                                <div onClick={() => buy(item)}>{getState(item.spent)}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\BuyScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\kitchen\\KitchenScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useCounter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useForm.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\firebase\\firebase-config.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\authReducer.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\types\\types.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\AuthContext.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\clientAuth.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminKitchen\\AdminKitchenScreen.js",["177"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const AdminKitchenScreen = () => {\r\n    const [product, setProduct] = useState(null || []);\r\n\r\n    useEffect(() => {\r\n        getPoduct();\r\n    }, []);\r\n\r\n    const getPoduct = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product`);\r\n        const body = await resp.json();\r\n        setProduct(body);\r\n    }\r\n\r\n    const getState = (state) => {\r\n        if (state) {\r\n            return (\r\n                <div className=\"alert alert-success\" >\r\n                    Disponible\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className=\"alert alert-danger\" >\r\n                    Agotado\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 col-md-12 mt-2\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr className=\"table-info\">\r\n                            <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Description</th>\r\n                                <th scope=\"col\">Price</th>\r\n                                <th scope=\"col\">Name Category</th>\r\n                                <th scope=\"col\" >Quantity In Stock</th>\r\n                                <th scope=\"col\">Spent</th>\r\n                                <th scope=\"col\" >Url Imagen</th>\r\n                                <th scope=\"col\" >Edit/Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                product && product.map((item, i )=> (\r\n                                    <tr key={item._id} className=\"table-active\">\r\n                                        <th scope=\"row\">{i + 1}</th>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.description}</td>\r\n                                        <td>{item.price}</td>\r\n                                        <td>{item.nameCategory}</td>\r\n                                        <td>{item.quantityInStock}</td>\r\n                                        <td>{getState(item.spent)  }</td>\r\n                                        <td > <img src={item.urlImg} width=\"80px\" className=\"img-fluid\" /></td>\r\n                                        <td>\r\n                                            <Link to={`/admin/product/edit/${item._id}`} className=\"btn btn-outline-info btn-sm btn-block\">Edit</Link>\r\n                                            <Link to={`/admin/delete/${item._id}`} className=\"btn btn-outline-danger btn-sm btn-block\">Delete</Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\AdminRoomScreen.js",["178","179"],"import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nexport const AdminRoomScreen = () => {\r\n    const [product, setProduct] = useState(null || []);\r\n    // useParams();\r\n    // const [product, setProduct] = useState(null || []);\r\n    // const category = getCategoryProduct(categories);\r\n\r\n    useEffect(() => {\r\n        getPoducts();\r\n    }, []);\r\n\r\n    const getPoducts = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product`);\r\n        const body = await resp.json();\r\n        setProduct(body);\r\n        console.log(body)\r\n    }\r\n\r\n    const getState = (state) => {\r\n        if (state) {\r\n            return (\r\n                <div className=\"alert alert-success\" >\r\n                    Disponible\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className=\"alert alert-danger\" >\r\n                    Agotado\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 col-md-12 mt-2\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr className=\"table-info\">\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Description</th>\r\n                                <th scope=\"col\">Price</th>\r\n                                <th scope=\"col\">Name Category</th>\r\n                                <th scope=\"col\" >Quantity In Stock</th>\r\n                                <th scope=\"col\">Spent</th>\r\n                                <th scope=\"col\" >Url Imagen</th>\r\n                                <th scope=\"col\" >Edit/Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                product && product.map((item, i) => (\r\n                                    <tr key={item._id}>\r\n                                        <th scope=\"row\">{i + 1}</th>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.description}</td>\r\n                                        <td>{item.price}</td>\r\n                                        <td>{item.nameCategory}</td>\r\n                                        <td>{item.quantityInStock}</td>\r\n                                        <td>{getState(item.spent)  }</td>\r\n                                        <td > <img src={item.urlImg} width=\"80px\" className=\"img-fluid\" /></td>\r\n                                        <td>\r\n                                            <Link to={`/admin/product/edit/${item._id}`} className=\"btn btn-outline-info btn-sm btn-block\">Edit</Link>\r\n                                            <Link to={`/admin/delete/${item._id}`} className=\"btn btn-outline-danger btn-sm btn-block\">Delete</Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\FormProduct.js",["180","181","182"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const FormProduct = () => {\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        editProduct();\r\n        reset();\r\n    }\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getProduct();\r\n    }, [])\r\n\r\n    const [values, handleInputChange, loadDataForm, reset] = useForm({\r\n        name: '',\r\n        nameCategory: '',\r\n        description: '',\r\n        price: '',\r\n        quantityInStock: '',\r\n        urlImg: '',\r\n        spent: ''\r\n    });\r\n    const { name, nameCategory, description, price, quantityInStock, urlImg, spent } = values;\r\n\r\n\r\n    const getProduct = async () => {\r\n        // console.log(id);\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`);\r\n        const body = await resp.json();\r\n        // const {name} = !!body && body[0];\r\n        loadDataForm(body);\r\n    }\r\n\r\n    const getCategory = async () => {\r\n        // console.log(id);\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`);\r\n        const body = await resp.json();\r\n        // const {name} = !!body && body[0];\r\n        loadDataForm(body);\r\n    }\r\n\r\n    const editProduct = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: values.name,\r\n                nameCategory: values.nameCategory,\r\n                description: values.description,\r\n                price: values.price,\r\n                quantityInStock: values.quantityInStock,\r\n                spent: values.spent,\r\n                urlImg: values.urlImg\r\n            }),\r\n        });\r\n        const body = await resp.json();\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {/* <div className=\"row justify-content-md-center\"> */}\r\n                <div className=\"col col-lg-6 col-md-8 col-sm-11\">\r\n                    {/* <div className=\"box\"> */}\r\n                    <form onSubmit={handleSubmit}>\r\n                        <fieldset>\r\n                            <legend>Edit a Product</legend>\r\n                            <div className=\"form-group\">\r\n                                <label>Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Name..\"\r\n                                    value={name}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Description</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"description\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Description..\"\r\n                                    value={description}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Price</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"price\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Price..\"\r\n                                    value={price}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Spent</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"spent\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Spent..\"\r\n                                    value={spent}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Name Category</label>\r\n                                <select \r\n                                // value={nameCategory} \r\n                                onChange={handleInputChange}\r\n                                className=\"form-control form-control-sm\"\r\n                                >\r\n                                    <option value={nameCategory}>{nameCategory}</option>\r\n                                </select>\r\n                                {/* <input\r\n                                    onChange={handleInputChange}\r\n                                    type=\"text\"\r\n                                    name=\"nameCategory\"\r\n                                    placeholder=\"Name Category...\"\r\n                                    value={nameCategory}\r\n                                /> */}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Quantity In Stock</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"quantityInStock\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Quantity In Stock...\"\r\n                                    value={quantityInStock}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Url Image</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"urlImg\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Url Image\"\r\n                                    value={urlImg}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            {/* <button type=\"submit\" className=\"btn btn-primary\">Create</button> */}\r\n                            <button type=\"submit\" className=\"btn btn-outline-info btn-sm\">Aceppt</button>\r\n                            <Link to=\"/admin/AdminRoom\" type=\"button\" className=\"btn btn-outline-danger btn-sm\">Back</Link>\r\n                        </fieldset>\r\n                    </form>\r\n                    {/* </div> */}\r\n                    {/* </div> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdminRouter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\Delete.js",["183","184","185"],"import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nexport const Delete = () => {\r\n    const { id } = useParams();\r\n\r\n    const deleteProduct = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n        const body = await resp.json();\r\n\r\n        // if (body.ok) {\r\n        //     // console.log('Eliminado');\r\n        //     Swal.fire('Elimiado', body );\r\n        // }\r\n    }    \r\n\r\n    const deleteClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n        const body = await resp.json();\r\n    }    \r\n\r\n    deleteProduct();\r\n    deleteClient();\r\n    return (\r\n        <div>\r\n            <h1>Eliminado</h1>\r\n\r\n            {/* <button onClick={deleteProduct} >Eliminar</button> */}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminRoom\\NewProduct.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\Sidebar.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdministratorRoute.js",[],["186","187"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\AdminClientScreen.js",["188","189"],"import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nexport const AdminClientScreen = () => {\r\n    const [client, setClient] = useState([]);\r\n    // // useParams();\r\n    // // const [product, setProduct] = useState(null || []);\r\n    // // const category = getCategoryProduct(categories);\r\n\r\n    useEffect(() => {\r\n        getClients();\r\n    }, []);\r\n\r\n    const getClients = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`);\r\n        const body = await resp.json();\r\n        // console.log(body);\r\n        setClient(body.clients);\r\n    }\r\n\r\n    // const [clients] = client;\r\n    // console.log(clients);\r\n    const deleteClient = async (id) => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`, {\r\n            method:'DELETE'\r\n        });\r\n        const body = await resp.json();\r\n        console.log(body);\r\n\r\n        if (body.ok) {\r\n            getClients();\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Eliminado con exito',\r\n                text: 'Something went wrong!'\r\n              })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"row\" >\r\n                <div className=\"col-lg-12 col-md-12\" >\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr className=\"table-warning\">\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Last Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Buys</th>\r\n                                <th scope=\"col\">Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                client.map((item, i) => (\r\n                                    <tr key={item._id}>\r\n                                        <th scope=\"row\">{ i + 1 }</th>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.lastName}</td>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.buy.length}</td>\r\n                                        <td>\r\n                                        <Link to={`/admin/delete/${item._id}`} className=\"btn btn-outline-danger btn-sm btn-block\">Delete</Link>\r\n\r\n                                        {/* <Link to={`admin/delete/${item._id}`} className=\"btn btn-outline-danger btn-sm btn-block\">Delete</Link> */}\r\n                                            {/* <button onClick={() => deleteClient(item._id)} className=\"btn btn-outline-danger btn-sm btn-block\">Delete</button> */}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\FormClient.js",["190","191"],"import React, { useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const FormClient = () => {\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        editClient();\r\n        reset();\r\n    }\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getClient();\r\n    }, [])\r\n\r\n    const [values, handleInputChange, loadDataForm, reset] = useForm({\r\n        name: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        buy: ''\r\n\r\n    });\r\n    const {name, lastName, email, password, buy} = values;\r\n\r\n    const getClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`);\r\n        const body = await resp.json();\r\n        // const {name} = !!body && body[0];\r\n        loadDataForm(body);\r\n    }\r\n    const editClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/edit/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: values.name,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                password: values.password,\r\n                buy: values.buy\r\n            }),\r\n        });\r\n        const body = await resp.json();\r\n}\r\nreturn (\r\n    <>\r\n        <div className=\"container\">\r\n            {/* <div className=\"row justify-content-md-center\"> */}\r\n            <div className=\"col col-lg-6 col-md-8 col-sm-11\">\r\n                {/* <div className=\"box\"> */}\r\n                <form onSubmit={handleSubmit}>\r\n                    <fieldset>\r\n                        <legend>Edit a Client</legend>\r\n                        <div className=\"form-group\">\r\n                            <label>Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                className=\"form-control form-control-sm\"\r\n                                placeholder=\"Name..\"\r\n                                value={name}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Last Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"lastName\"\r\n                                className=\"form-control form-control-sm\"\r\n                                placeholder=\"Last Name..\"\r\n                                value={lastName}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                className=\"form-control form-control-sm\"\r\n                                placeholder=\"Email..\"\r\n                                value={email}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"password\"\r\n                                className=\"form-control form-control-sm\"\r\n                                placeholder=\"Password..\"\r\n                                value={password}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Compras</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"buy\"\r\n                                className=\"form-control form-control-sm\"\r\n                                placeholder=\"Vacio\"\r\n                                value={buy}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        {/* <button type=\"submit\" className=\"btn btn-primary\">Create</button> */}\r\n                        <button type=\"submit\" className=\"btn btn-outline-info btn-sm\">Aceppt</button>\r\n                        <Link to=\"/admin/client\" type=\"button\" className=\"btn btn-outline-danger btn-sm\">Back</Link>\r\n                    </fieldset>\r\n                </form>\r\n                {/* </div> */}\r\n                {/* </div> */}\r\n            </div>\r\n        </div>\r\n    </>\r\n)\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginAdminScreen.js",["192","193"],"import React, { useContext, useEffect } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { clientLogin } from '../../auth/clientAuth';\r\nimport { types } from '../../types/types';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const LoginAdminScreen = () => {\r\n    // const history = useHistory();\r\n    const { dispatch } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        // getUser();\r\n        // addUser();\r\n    }, [])\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        // email: '',\r\n        email: 'jelsyn@gmail.es',\r\n        password: '123456',\r\n        // password: '',\r\n    });\r\n\r\n    const { email, password } = values;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        clientLogin(email, password);        \r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                status: 'registro'\r\n            }\r\n        });\r\n\r\n        // addUser();\r\n        // console.log(values);\r\n        // clientLogin(email, password);\r\n        // history.replace('/admin');\r\n    }\r\n\r\n    const getUser = async () => {\r\n\r\n        const resp = await fetch(`http://localhost:4000/api/user-admin`);\r\n        const body = await resp.json();\r\n\r\n        console.log(body);\r\n    }\r\n\r\n    const addUser = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/user-admin/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            }),\r\n        });\r\n\r\n        const body = await resp.json();\r\n        localStorage.setItem('admin', JSON.stringify(body.user.administrator));\r\n        console.log(body);\r\n    }\r\n    // const login = () => {\r\n    //     return console.log(email, password);\r\n\r\n    // }\r\n    return (\r\n        <div className=\"login-wrap mt-3\">\r\n            <div className=\"login-html\">\r\n                <label className=\"tab\">Sign In Administrator</label>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"sign-in-html mt-5\">\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Email</label>\r\n                            <input\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                className=\"input\"\r\n                                value={email}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Password</label>\r\n                            <input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                className=\"input\"\r\n                                value={password}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group mt-4\">\r\n                            <input type=\"submit\" className=\"button\" value=\"Sign In\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateAdminRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicAdminRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\ProductScreen.js",["194","195","196"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const ProductScreen = () => {\r\n    const uid = JSON.parse(localStorage.getItem('uid'));\r\n\r\n    const [products, setProduct] = useState([]);\r\n\r\n    const getProductClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${JSON.parse(localStorage.getItem('uid'))}/products`);\r\n        const body = await resp.json();\r\n        setProduct(body.buy);\r\n        // console.log(body._id);\r\n    }\r\n\r\n    // const [buy, setBuy] = useState([]);\r\n    // setBuy(products);\r\n    // console.log(products);\r\n\r\n    // const [name] = buy;\r\n    // console.log(name);\r\n    useEffect(() => {\r\n        getProductClient();\r\n    }, []);\r\n\r\n    let bol = !true;\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"card mt-3\">\r\n                    {\r\n                        products.map((item) => {\r\n                            return (\r\n                                <div className=\"row g-0\">\r\n                                    <div className=\"col-md m-4\">\r\n                                        <img src={item.urlImg} width=\"400px\" className=\"img-fluid\"/>\r\n                                    </div>\r\n                                    <div className=\"col-md-7 m-2\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Name: {item.name}</h5>\r\n                                            <h6><strong>Category: {item.nameCategory} </strong></h6>\r\n                                            <p className=\"card-text\">Description: {item.description}</p>\r\n                                            <p className=\"card-text\">Price: {item.price}</p>\r\n                                            <hr />\r\n                                        </div>\r\n                                        <Link to={`/delete/${item.id}`} className=\"btn btn-outline-danger btn-sm btn-block\">Remover from my list</Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\Delete.js",["197","198","199","200"],"import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nexport const Delete = () => {\r\n    const uid = JSON.parse(localStorage.getItem('uid'));\r\n    const { id } = useParams();\r\n    console.log(`Product ${id}`);\r\n    console.log(`UID ${uid}`);\r\n\r\n    const [idUser, setIdUser] = useState();\r\n\r\n    const getProductClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${JSON.parse(localStorage.getItem('uid'))}/products`);\r\n        const body = await resp.json();\r\n        setIdUser(body._id);\r\n        console.log(body._id);\r\n    }\r\n    // const {_id} = idUser;\r\n    // console.log(idUser);\r\n\r\n    const deleteProduct = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${uid}/products/${id}`, {\r\n            method: 'PUT'\r\n        });\r\n        const body = await resp.json();\r\n    }    \r\n\r\n    deleteProduct();\r\n\r\n    return (\r\n        <div>\r\n            <h1>Eliminado</h1>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\category\\CategoryScreen.js",["201","202","203"],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":1,"column":40,"nodeType":"210","messageId":"211","endLine":1,"endColumn":48},{"ruleId":"212","severity":1,"message":"213","line":15,"column":8,"nodeType":"214","endLine":15,"endColumn":10,"suggestions":"215"},{"ruleId":"208","severity":1,"message":"209","line":1,"column":29,"nodeType":"210","messageId":"211","endLine":1,"endColumn":37},{"ruleId":"208","severity":1,"message":"216","line":22,"column":44,"nodeType":"210","messageId":"211","endLine":22,"endColumn":47},{"ruleId":"208","severity":1,"message":"217","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":27},{"ruleId":"208","severity":1,"message":"218","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":18},{"ruleId":"208","severity":1,"message":"219","line":46,"column":11,"nodeType":"210","messageId":"211","endLine":46,"endColumn":24},{"ruleId":"208","severity":1,"message":"220","line":2,"column":16,"nodeType":"210","messageId":"211","endLine":2,"endColumn":26},{"ruleId":"208","severity":1,"message":"221","line":20,"column":11,"nodeType":"210","messageId":"211","endLine":20,"endColumn":20},{"ruleId":"208","severity":1,"message":"222","line":22,"column":15,"nodeType":"210","messageId":"211","endLine":22,"endColumn":19},{"ruleId":"208","severity":1,"message":"223","line":47,"column":15,"nodeType":"210","messageId":"211","endLine":47,"endColumn":19},{"ruleId":"208","severity":1,"message":"219","line":113,"column":11,"nodeType":"210","messageId":"211","endLine":113,"endColumn":24},{"ruleId":"224","severity":1,"message":"225","line":114,"column":29,"nodeType":"226","messageId":"227","endLine":114,"endColumn":31},{"ruleId":"228","severity":1,"message":"229","line":149,"column":49,"nodeType":"230","endLine":149,"endColumn":110},{"ruleId":"228","severity":1,"message":"229","line":61,"column":47,"nodeType":"230","endLine":61,"endColumn":107},{"ruleId":"208","severity":1,"message":"231","line":2,"column":16,"nodeType":"210","messageId":"211","endLine":2,"endColumn":25},{"ruleId":"228","severity":1,"message":"229","line":66,"column":47,"nodeType":"230","endLine":66,"endColumn":107},{"ruleId":"212","severity":1,"message":"232","line":19,"column":8,"nodeType":"214","endLine":19,"endColumn":10,"suggestions":"233"},{"ruleId":"208","severity":1,"message":"234","line":41,"column":11,"nodeType":"210","messageId":"211","endLine":41,"endColumn":22},{"ruleId":"208","severity":1,"message":"222","line":65,"column":15,"nodeType":"210","messageId":"211","endLine":65,"endColumn":19},{"ruleId":"208","severity":1,"message":"235","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":12},{"ruleId":"208","severity":1,"message":"222","line":13,"column":15,"nodeType":"210","messageId":"211","endLine":13,"endColumn":19},{"ruleId":"208","severity":1,"message":"222","line":25,"column":15,"nodeType":"210","messageId":"211","endLine":25,"endColumn":19},{"ruleId":"204","replacedBy":"236"},{"ruleId":"206","replacedBy":"237"},{"ruleId":"208","severity":1,"message":"231","line":2,"column":16,"nodeType":"210","messageId":"211","endLine":2,"endColumn":25},{"ruleId":"208","severity":1,"message":"238","line":25,"column":11,"nodeType":"210","messageId":"211","endLine":25,"endColumn":23},{"ruleId":"212","severity":1,"message":"239","line":17,"column":8,"nodeType":"214","endLine":17,"endColumn":10,"suggestions":"240"},{"ruleId":"208","severity":1,"message":"222","line":49,"column":15,"nodeType":"210","messageId":"211","endLine":49,"endColumn":19},{"ruleId":"208","severity":1,"message":"241","line":41,"column":11,"nodeType":"210","messageId":"211","endLine":41,"endColumn":18},{"ruleId":"208","severity":1,"message":"242","line":49,"column":11,"nodeType":"210","messageId":"211","endLine":49,"endColumn":18},{"ruleId":"208","severity":1,"message":"216","line":6,"column":11,"nodeType":"210","messageId":"211","endLine":6,"endColumn":14},{"ruleId":"208","severity":1,"message":"243","line":27,"column":9,"nodeType":"210","messageId":"211","endLine":27,"endColumn":12},{"ruleId":"228","severity":1,"message":"229","line":37,"column":41,"nodeType":"230","endLine":37,"endColumn":101},{"ruleId":"208","severity":1,"message":"235","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":12},{"ruleId":"208","severity":1,"message":"244","line":12,"column":12,"nodeType":"210","messageId":"211","endLine":12,"endColumn":18},{"ruleId":"208","severity":1,"message":"245","line":14,"column":11,"nodeType":"210","messageId":"211","endLine":14,"endColumn":27},{"ruleId":"208","severity":1,"message":"222","line":27,"column":15,"nodeType":"210","messageId":"211","endLine":27,"endColumn":19},{"ruleId":"208","severity":1,"message":"246","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":14},{"ruleId":"212","severity":1,"message":"247","line":15,"column":8,"nodeType":"214","endLine":15,"endColumn":10,"suggestions":"248"},{"ruleId":"228","severity":1,"message":"229","line":30,"column":49,"nodeType":"230","endLine":30,"endColumn":110},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["251"],"'uid' is assigned a value but never used.","'useContext' is defined but never used.","'firebase' is defined but never used.","'getIdCategory' is assigned a value but never used.","'useHistory' is defined but never used.","'getClient' is assigned a value but never used.","'body' is assigned a value but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["252"],"'getCategory' is assigned a value but never used.","'Swal' is defined but never used.",["249"],["250"],"'deleteClient' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getClient'. Either include it or remove the dependency array.",["253"],"'getUser' is assigned a value but never used.","'addUser' is assigned a value but never used.","'bol' is assigned a value but never used.","'idUser' is assigned a value but never used.","'getProductClient' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getProductCategory'. Either include it or remove the dependency array.",["254"],"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [user]",{"range":"263","text":"264"},"Update the dependencies array to be: [getProduct]",{"range":"265","text":"266"},"Update the dependencies array to be: [getClient]",{"range":"267","text":"268"},"Update the dependencies array to be: [getProductCategory]",{"range":"269","text":"270"},[511,513],"[user]",[421,423],"[getProduct]",[380,382],"[getClient]",[499,501],"[getProductCategory]"]