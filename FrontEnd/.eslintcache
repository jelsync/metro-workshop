[{"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\index.js":"1","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\MetroApp.js":"2","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AppRouter.js":"3","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\DashboardRouter.js":"4","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\CreateUserScreen.js":"5","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginScreen.js":"6","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\NavbarAdmin.js":"7","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Navbar.js":"8","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\HomeArticlesScreen.js":"9","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\BuyScreen.js":"10","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useCounter.js":"11","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useForm.js":"12","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\firebase\\firebase-config.js":"13","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\authReducer.js":"14","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\types\\types.js":"15","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\AuthContext.js":"16","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\clientAuth.js":"17","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdminRouter.js":"18","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateRoute.js":"19","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicRoute.js":"20","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdministratorRoute.js":"21","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\AdminClientScreen.js":"22","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\FormClient.js":"23","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginAdminScreen.js":"24","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateAdminRoute.js":"25","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicAdminRoute.js":"26","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\ProductScreen.js":"27","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\category\\CategoryScreen.js":"28","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Sidebar.js":"29","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\NewProduct.js":"30","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\Delete.js":"31","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\AdminCategoryScreen.js":"32","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\FormProduct.js":"33"},{"size":197,"mtime":1613963602879,"results":"34","hashOfConfig":"35"},{"size":648,"mtime":1619457040337,"results":"36","hashOfConfig":"35"},{"size":2033,"mtime":1614479416226,"results":"37","hashOfConfig":"35"},{"size":983,"mtime":1619469104462,"results":"38","hashOfConfig":"35"},{"size":5417,"mtime":1619239078643,"results":"39","hashOfConfig":"35"},{"size":2895,"mtime":1617908074640,"results":"40","hashOfConfig":"35"},{"size":1245,"mtime":1619212127986,"results":"41","hashOfConfig":"35"},{"size":3711,"mtime":1619469165599,"results":"42","hashOfConfig":"35"},{"size":5067,"mtime":1619679242675,"results":"43","hashOfConfig":"35"},{"size":3332,"mtime":1619667990568,"results":"44","hashOfConfig":"35"},{"size":473,"mtime":1611958713651,"results":"45","hashOfConfig":"35"},{"size":531,"mtime":1612808725498,"results":"46","hashOfConfig":"35"},{"size":655,"mtime":1612481800228,"results":"47","hashOfConfig":"35"},{"size":561,"mtime":1614475275369,"results":"48","hashOfConfig":"35"},{"size":82,"mtime":1613967287728,"results":"49","hashOfConfig":"35"},{"size":86,"mtime":1612555748916,"results":"50","hashOfConfig":"35"},{"size":771,"mtime":1614478616173,"results":"51","hashOfConfig":"35"},{"size":1749,"mtime":1619235112606,"results":"52","hashOfConfig":"35"},{"size":575,"mtime":1613087781706,"results":"53","hashOfConfig":"35"},{"size":578,"mtime":1614457253850,"results":"54","hashOfConfig":"35"},{"size":613,"mtime":1613151803759,"results":"55","hashOfConfig":"35"},{"size":3238,"mtime":1619238172753,"results":"56","hashOfConfig":"35"},{"size":4959,"mtime":1619238272249,"results":"57","hashOfConfig":"35"},{"size":3343,"mtime":1614480443815,"results":"58","hashOfConfig":"35"},{"size":590,"mtime":1614479363531,"results":"59","hashOfConfig":"35"},{"size":593,"mtime":1614479333158,"results":"60","hashOfConfig":"35"},{"size":5268,"mtime":1619679259225,"results":"61","hashOfConfig":"35"},{"size":4171,"mtime":1619668007992,"results":"62","hashOfConfig":"35"},{"size":1223,"mtime":1619230479257,"results":"63","hashOfConfig":"35"},{"size":8246,"mtime":1619236025333,"results":"64","hashOfConfig":"35"},{"size":838,"mtime":1619238101334,"results":"65","hashOfConfig":"35"},{"size":3536,"mtime":1619237983106,"results":"66","hashOfConfig":"35"},{"size":7612,"mtime":1619557624480,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"hpuued",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"70"},"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\index.js",[],["145","146"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\MetroApp.js",["147"],"import React, { useEffect, useReducer} from 'react';\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false };\r\n}\r\n\r\nexport const MetroApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init)\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n}","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AppRouter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\DashboardRouter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\CreateUserScreen.js",["148"],"import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\nimport Swal from 'sweetalert2'\r\nimport { firebase } from '../../firebase/firebase-config';\r\nimport { types } from '../../types/types';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\n\r\n\r\n\r\nexport const CreateUserScreen = () => {\r\n    const { dispatch} = useContext(AuthContext);\r\n\r\n    const [values, handleInputChange,] = useForm({\r\n        name: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        uid: '',\r\n    });\r\n\r\n    var { email, password, name, lastName, uid } = values;\r\n\r\n    const formValid = () => {\r\n        if (name.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a name',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (lastName.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a Last Name',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        }\r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                accion: 'registro'\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (formValid()) {\r\n            firebase.auth().createUserWithEmailAndPassword(email, password)\r\n                .then(async ({ user }) => {\r\n                    localStorage.setItem('uid', JSON.stringify(user.uid));\r\n                    await user.updateProfile({ displayName: name });\r\n                    addClient();\r\n                })\r\n                .catch(e => {\r\n                    Swal.fire('Error', e.message, 'error');\r\n                })\r\n        };\r\n    }\r\n\r\n    const addClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                uid: JSON.parse(localStorage.getItem('uid')),\r\n                name,\r\n                lastName,\r\n                password,\r\n                email\r\n            }),\r\n        });\r\n        const body = await resp.json();\r\n        localStorage.setItem('id', JSON.stringify(body._id));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-wrap mt-3\">\r\n            <div className=\"login-html\">\r\n                <label htmlFor=\"tab-2\" className=\"tab\">Sign Up</label>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"sign-up-html\">\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"user\" className=\"label\">Name</label>\r\n                            <input\r\n                                id=\"user\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                className=\"input\"\r\n                                value={name}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Last Name</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"lastName\"\r\n                                type=\"text\"\r\n                                className=\"input\"\r\n                                value={lastName}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Email Address</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                className=\"input\"\r\n                                value={email}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Password</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                className=\"input\"\r\n                                value={password}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"button\"\r\n                                value=\"Sign Up\" />\r\n                        </div>\r\n                        <div className=\"foot-lnk\">\r\n                            <Link to=\"/Login\">Back</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginScreen.js",["149"],"import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n// import { AuthContext } from '../../auth/AuthContext';\r\nimport { clientLogin } from '../../auth/clientAuth';\r\n// import { types } from '../../types/types';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const LoginScreen = ({history}) => {\r\n    // const { dispatch } = useContext(AuthContext);\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        email: 'jelsyn@gmail.com',\r\n        password: '12345',\r\n    });\r\n\r\n    const { email, password } = values;\r\n\r\n    // const addClient = async () => {\r\n    //     const resp = await fetch(`http://localhost:4000/api/client`, {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //             password,\r\n    //             email\r\n    //         }),\r\n    //     });\r\n\r\n    //     const body = await resp.json();\r\n    //     localStorage.setItem('body', JSON.stringify (body._id));\r\n\r\n    // }\r\n\r\n    // const [body, setBody] = useState(addClient)\r\n    // const {name} = body;\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        clientLogin(email, password);        \r\n    }\r\n    return (\r\n        <div className=\"login-wrap mt-3\">\r\n            <div className=\"login-html\">\r\n                <label className=\"tab\">Sign In</label>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"sign-in-html mt-4\">\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Email</label>\r\n                            <input\r\n                            name=\"email\" \r\n                            type=\"text\" \r\n                            className=\"input\"  \r\n                            value={email}\r\n                            onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Password</label>\r\n                            <input\r\n                            name=\"password\"\r\n                            type=\"password\" \r\n                            className=\"input\" \r\n                            value={password}\r\n                            onChange={handleInputChange}  />\r\n                        </div>\r\n                        <div className=\"group mt-4\">\r\n                            <input type=\"submit\" className=\"button\" value=\"Sign In\" />\r\n                        </div>\r\n                        <div className=\"hr\"></div>\r\n                        <div className=\"foot-lnk\">\r\n                            <Link to=\"/create-user\">Creater User</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\NavbarAdmin.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Navbar.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\HomeArticlesScreen.js",["150","151","152","153","154"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\BuyScreen.js",["155","156","157","158","159"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useCounter.js",[],["160","161"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useForm.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\firebase\\firebase-config.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\authReducer.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\types\\types.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\AuthContext.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\clientAuth.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdminRouter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdministratorRoute.js",[],["162","163"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\AdminClientScreen.js",["164"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const AdminClientScreen = () => {\r\n    const [client, setClient] = useState([]);\r\n    // // useParams();\r\n    // // const [product, setProduct] = useState(null || []);\r\n    // // const category = getCategoryProduct(categories);\r\n\r\n    useEffect(() => {\r\n        getClients();\r\n    }, []);\r\n\r\n    const getClients = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`);\r\n        const body = await resp.json();\r\n        // console.log(body);\r\n        setClient(body.clients);\r\n    }\r\n\r\n    // const [clients] = client;\r\n    // console.log(clients);\r\n    const deleteClient = async (id) => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`, {\r\n            method:'DELETE'\r\n        });\r\n        const body = await resp.json();\r\n        console.log(body);\r\n\r\n        if (body.ok) {\r\n            getClients();\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Eliminado con exito',\r\n                text: 'Something went wrong!'\r\n              })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"row\" >\r\n                <div className=\"col-lg-12 col-md-12\" >\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr className=\"table-warning\">\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Last Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Buys</th>\r\n                                <th scope=\"col\">Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                client.map((item, i) => (\r\n                                    <tr key={item._id}>\r\n                                        <th scope=\"row\">{ i + 1 }</th>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.lastName}</td>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.buy.length}</td>\r\n                                        <td>\r\n                                        <Link to={`/admin/delete/${item._id}`} className=\"btn btn-outline-danger btn-sm btn-block\">Delete</Link>\r\n\r\n                                        {/* <Link to={`admin/delete/${item._id}`} className=\"btn btn-outline-danger btn-sm btn-block\">Delete</Link> */}\r\n                                            {/* <button onClick={() => deleteClient(item._id)} className=\"btn btn-outline-danger btn-sm btn-block\">Delete</button> */}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\FormClient.js",["165"],"import React, { useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const FormClient = () => {\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        editClient();\r\n        reset();\r\n    }\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getClient();\r\n    })\r\n\r\n    const [values, handleInputChange, loadDataForm, reset] = useForm({\r\n        name: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        buy: ''\r\n\r\n    });\r\n    const {name, lastName, email, password, buy} = values;\r\n\r\n    const getClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`);\r\n        const body = await resp.json();\r\n        // const {name} = !!body && body[0];\r\n        loadDataForm(body);\r\n    }\r\n    const editClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/edit/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: values.name,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                password: values.password,\r\n                buy: values.buy\r\n            }),\r\n        });\r\n        const body = await resp.json();\r\n}\r\nreturn (\r\n    <>\r\n        <div className=\"container\">\r\n            {/* <div className=\"row justify-content-md-center\"> */}\r\n            <div className=\"col col-lg-6 col-md-8 col-sm-11\">\r\n                {/* <div className=\"box\"> */}\r\n                <form onSubmit={handleSubmit}>\r\n                    <fieldset>\r\n                        <legend>Edit a Client</legend>\r\n                        <div className=\"form-group\">\r\n                            <label>Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                className=\"form-control form-control-sm\"\r\n                                placeholder=\"Name..\"\r\n                                value={name}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Last Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"lastName\"\r\n                                className=\"form-control form-control-sm\"\r\n                                placeholder=\"Last Name..\"\r\n                                value={lastName}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                className=\"form-control form-control-sm\"\r\n                                placeholder=\"Email..\"\r\n                                value={email}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"password\"\r\n                                className=\"form-control form-control-sm\"\r\n                                placeholder=\"Password..\"\r\n                                value={password}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Compras</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"buy\"\r\n                                className=\"form-control form-control-sm\"\r\n                                placeholder=\"Vacio\"\r\n                                value={buy}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        {/* <button type=\"submit\" className=\"btn btn-primary\">Create</button> */}\r\n                        <button type=\"submit\" className=\"btn btn-outline-info btn-sm\">Aceppt</button>\r\n                        <Link to=\"/admin/client\" type=\"button\" className=\"btn btn-outline-danger btn-sm\">Back</Link>\r\n                    </fieldset>\r\n                </form>\r\n                {/* </div> */}\r\n                {/* </div> */}\r\n            </div>\r\n        </div>\r\n    </>\r\n)\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginAdminScreen.js",["166","167"],"import React, { useContext, useEffect } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { clientLogin } from '../../auth/clientAuth';\r\nimport { types } from '../../types/types';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const LoginAdminScreen = () => {\r\n    // const history = useHistory();\r\n    const { dispatch } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        // getUser();\r\n        // addUser();\r\n    }, [])\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        // email: '',\r\n        email: 'jelsyn@gmail.es',\r\n        password: '123456',\r\n        // password: '',\r\n    });\r\n\r\n    const { email, password } = values;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        clientLogin(email, password);        \r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                status: 'registro'\r\n            }\r\n        });\r\n\r\n        // addUser();\r\n        // console.log(values);\r\n        // clientLogin(email, password);\r\n        // history.replace('/admin');\r\n    }\r\n\r\n    const getUser = async () => {\r\n\r\n        const resp = await fetch(`http://localhost:4000/api/user-admin`);\r\n        const body = await resp.json();\r\n\r\n        console.log(body);\r\n    }\r\n\r\n    const addUser = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/user-admin/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            }),\r\n        });\r\n\r\n        const body = await resp.json();\r\n        localStorage.setItem('admin', JSON.stringify(body.user.administrator));\r\n        console.log(body);\r\n    }\r\n    // const login = () => {\r\n    //     return console.log(email, password);\r\n\r\n    // }\r\n    return (\r\n        <div className=\"login-wrap mt-3\">\r\n            <div className=\"login-html\">\r\n                <label className=\"tab\">Sign In Administrator</label>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"sign-in-html mt-5\">\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Email</label>\r\n                            <input\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                className=\"input\"\r\n                                value={email}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Password</label>\r\n                            <input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                className=\"input\"\r\n                                value={password}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group mt-4\">\r\n                            <input type=\"submit\" className=\"button\" value=\"Sign In\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateAdminRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicAdminRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\ProductScreen.js",["168","169","170","171"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\category\\CategoryScreen.js",["172","173","174","175"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Sidebar.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\NewProduct.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\Delete.js",["176","177"],"import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport const Delete = () => {\r\n    const { id } = useParams();\r\n\r\n    const deleteProduct = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n        const body = await resp.json();\r\n\r\n        // if (body.ok) {\r\n        //     // console.log('Eliminado');\r\n        //     Swal.fire('Elimiado', body );\r\n        // }\r\n    }    \r\n\r\n    const deleteClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n        const body = await resp.json();\r\n    }    \r\n\r\n    deleteProduct();\r\n    deleteClient();\r\n    return (\r\n        <div>\r\n            <h1>Eliminado</h1>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\AdminCategoryScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\FormProduct.js",["178","179","180"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const FormProduct = () => {\r\n    // const categoryId = JSON.parse(localStorage.getItem('idCate'));\r\n    useEffect(() => {\r\n        getProduct();\r\n        getCategory();\r\n    },[]);\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        editProduct();\r\n        reset();\r\n    }\r\n\r\n    const { id } = useParams();\r\n\r\n    const [values, handleInputChange, loadDataForm, reset] = useForm({\r\n        name: '',\r\n        category: '',\r\n        description: '',\r\n        price: '',\r\n        quantityInStock: '',\r\n        urlImg: '',\r\n        spent: ''\r\n    });\r\n    const { name, category, description, price, quantityInStock, urlImg, spent} = values;\r\n    // console.log(values);\r\n\r\n    const getProduct = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`);\r\n        const body = await resp.json();\r\n        // const {name} = !!body && body[0];\r\n        loadDataForm(body);\r\n    }\r\n\r\n    const [categories, setCategories] = useState()\r\n\r\n    const getCategory = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/category`);\r\n        const body = await resp.json();\r\n        // const {name} = !!body && body[0];\r\n        setCategories(body);\r\n    }\r\n\r\n    const editProduct = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: values.name,\r\n                nameCategory: values.nameCategory,\r\n                description: values.description,\r\n                price: values.price,\r\n                quantityInStock: values.quantityInStock,\r\n                spent: values.spent,\r\n                urlImg: values.urlImg\r\n            }),\r\n        });\r\n        const body = await resp.json();\r\n        console.log(body);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"login-area col col-lg-6 col-md-8 col-sm-11\">\r\n                {/* <div className=\"col col-lg-6 col-md-8 col-sm-11\"> */}\r\n                    <div className=\"box\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <fieldset>\r\n                            <legend>Edit a Product</legend>\r\n                            <div className=\"form-group\">\r\n                                <label>Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Name..\"\r\n                                    value={name}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Description</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"description\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Description..\"\r\n                                    value={description}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Price</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"price\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Price..\"\r\n                                    value={price}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Spent</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"spent\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Spent..\"\r\n                                    value={spent}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Name Category</label>\r\n                                {/* <select\r\n                                    name=\"category\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    // value={category}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {\r\n                                        categories && categories.map((item) => {\r\n                                            return(\r\n                                                <option key={item._id} value={item.name}>{item.name}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select> */}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Quantity In Stock</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"quantityInStock\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Quantity In Stock...\"\r\n                                    value={quantityInStock}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Url Image</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"urlImg\"\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder=\"Url Image\"\r\n                                    value={urlImg}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            {/* <button type=\"submit\" className=\"btn btn-primary\">Create</button> */}\r\n                            <button type=\"submit\" className=\"btn btn-outline-info btn-sm\">Aceppt</button>\r\n                            <Link to=\"/admin/AdminRoom\" type=\"button\" className=\"btn btn-outline-danger btn-sm\">Back</Link>\r\n                        </fieldset>\r\n                    </form>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n",{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":15,"column":8,"nodeType":"187","endLine":15,"endColumn":10,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":22,"column":44,"nodeType":"191","messageId":"192","endLine":22,"endColumn":47},{"ruleId":"189","severity":1,"message":"193","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":27},{"ruleId":"189","severity":1,"message":"194","line":9,"column":12,"nodeType":"191","messageId":"192","endLine":9,"endColumn":22},{"ruleId":"189","severity":1,"message":"195","line":17,"column":11,"nodeType":"191","messageId":"192","endLine":17,"endColumn":20},{"ruleId":"189","severity":1,"message":"196","line":19,"column":15,"nodeType":"191","messageId":"192","endLine":19,"endColumn":19},{"ruleId":"189","severity":1,"message":"197","line":48,"column":15,"nodeType":"191","messageId":"192","endLine":48,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":98,"column":49,"nodeType":"200","endLine":98,"endColumn":110},{"ruleId":"189","severity":1,"message":"201","line":18,"column":11,"nodeType":"191","messageId":"192","endLine":18,"endColumn":14},{"ruleId":"185","severity":1,"message":"202","line":22,"column":8,"nodeType":"187","endLine":22,"endColumn":19,"suggestions":"203"},{"ruleId":"185","severity":1,"message":"204","line":22,"column":9,"nodeType":"205","endLine":22,"endColumn":18},{"ruleId":"189","severity":1,"message":"197","line":39,"column":15,"nodeType":"191","messageId":"192","endLine":39,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":63,"column":29,"nodeType":"200","endLine":63,"endColumn":71},{"ruleId":"181","replacedBy":"206"},{"ruleId":"183","replacedBy":"207"},{"ruleId":"181","replacedBy":"208"},{"ruleId":"183","replacedBy":"209"},{"ruleId":"189","severity":1,"message":"210","line":24,"column":11,"nodeType":"191","messageId":"192","endLine":24,"endColumn":23},{"ruleId":"189","severity":1,"message":"196","line":49,"column":15,"nodeType":"191","messageId":"192","endLine":49,"endColumn":19},{"ruleId":"189","severity":1,"message":"211","line":41,"column":11,"nodeType":"191","messageId":"192","endLine":41,"endColumn":18},{"ruleId":"189","severity":1,"message":"212","line":49,"column":11,"nodeType":"191","messageId":"192","endLine":49,"endColumn":18},{"ruleId":"185","severity":1,"message":"204","line":27,"column":9,"nodeType":"205","endLine":27,"endColumn":26},{"ruleId":"189","severity":1,"message":"196","line":33,"column":15,"nodeType":"191","messageId":"192","endLine":33,"endColumn":19},{"ruleId":"189","severity":1,"message":"197","line":44,"column":15,"nodeType":"191","messageId":"192","endLine":44,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":72,"column":49,"nodeType":"200","endLine":72,"endColumn":110},{"ruleId":"185","severity":1,"message":"213","line":11,"column":8,"nodeType":"187","endLine":11,"endColumn":10,"suggestions":"214"},{"ruleId":"185","severity":1,"message":"215","line":30,"column":8,"nodeType":"187","endLine":30,"endColumn":18,"suggestions":"216"},{"ruleId":"189","severity":1,"message":"197","line":48,"column":15,"nodeType":"191","messageId":"192","endLine":48,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":87,"column":49,"nodeType":"200","endLine":87,"endColumn":110},{"ruleId":"189","severity":1,"message":"196","line":11,"column":15,"nodeType":"191","messageId":"192","endLine":11,"endColumn":19},{"ruleId":"189","severity":1,"message":"196","line":23,"column":15,"nodeType":"191","messageId":"192","endLine":23,"endColumn":19},{"ruleId":"185","severity":1,"message":"202","line":12,"column":7,"nodeType":"187","endLine":12,"endColumn":9,"suggestions":"217"},{"ruleId":"189","severity":1,"message":"218","line":31,"column":19,"nodeType":"191","messageId":"192","endLine":31,"endColumn":27},{"ruleId":"189","severity":1,"message":"194","line":41,"column":12,"nodeType":"191","messageId":"192","endLine":41,"endColumn":22},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["221"],"no-unused-vars","'uid' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'categories' is assigned a value but never used.","'getClient' is assigned a value but never used.","'body' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["222"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ArrowFunctionExpression",["219"],["220"],["219"],["220"],"'deleteClient' is assigned a value but never used.","'getUser' is assigned a value but never used.","'addUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["223"],"React Hook useEffect has a missing dependency: 'getProductCategory'. Either include it or remove the dependency array.",["224"],["225"],"'category' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"228","fix":"234"},"Update the dependencies array to be: [user]",{"range":"235","text":"236"},"Update the dependencies array to be: [getProduct]",{"range":"237","text":"238"},"Update the dependencies array to be: [getCategories]",{"range":"239","text":"240"},"Update the dependencies array to be: [category, getProductCategory]",{"range":"241","text":"242"},{"range":"243","text":"238"},[500,502],"[user]",[718,729],"[getProduct]",[336,338],"[getCategories]",[872,882],"[category, getProductCategory]",[373,375]]