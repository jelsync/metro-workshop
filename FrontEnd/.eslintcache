[{"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\index.js":"1","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\MetroApp.js":"2","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AppRouter.js":"3","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\DashboardRouter.js":"4","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\CreateUserScreen.js":"5","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginScreen.js":"6","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\NavbarAdmin.js":"7","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Navbar.js":"8","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\HomeArticlesScreen.js":"9","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\BuyScreen.js":"10","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useCounter.js":"11","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useForm.js":"12","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\firebase\\firebase-config.js":"13","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\authReducer.js":"14","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\types\\types.js":"15","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\AuthContext.js":"16","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\clientAuth.js":"17","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdminRouter.js":"18","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateRoute.js":"19","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicRoute.js":"20","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdministratorRoute.js":"21","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\AdminClientScreen.js":"22","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginAdminScreen.js":"23","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateAdminRoute.js":"24","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicAdminRoute.js":"25","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\ProductScreen.js":"26","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\category\\CategoryScreen.js":"27","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Sidebar.js":"28","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\NewProduct.js":"29","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\AdminCategoryScreen.js":"30","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\FormProduct.js":"31","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\services.js":"32","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\services.js":"33","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\services.js":"34","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\services.js":"35"},{"size":197,"mtime":1613963602879,"results":"36","hashOfConfig":"37"},{"size":648,"mtime":1619457040337,"results":"38","hashOfConfig":"37"},{"size":2627,"mtime":1619899827958,"results":"39","hashOfConfig":"37"},{"size":982,"mtime":1620062778398,"results":"40","hashOfConfig":"37"},{"size":5820,"mtime":1620018021835,"results":"41","hashOfConfig":"37"},{"size":2096,"mtime":1620023377081,"results":"42","hashOfConfig":"37"},{"size":1247,"mtime":1619901452375,"results":"43","hashOfConfig":"37"},{"size":3245,"mtime":1620066532389,"results":"44","hashOfConfig":"37"},{"size":4216,"mtime":1620066785181,"results":"45","hashOfConfig":"37"},{"size":3006,"mtime":1620022213995,"results":"46","hashOfConfig":"37"},{"size":473,"mtime":1611958713651,"results":"47","hashOfConfig":"37"},{"size":531,"mtime":1619975267105,"results":"48","hashOfConfig":"37"},{"size":655,"mtime":1612481800228,"results":"49","hashOfConfig":"37"},{"size":405,"mtime":1619899069582,"results":"50","hashOfConfig":"37"},{"size":82,"mtime":1613967287728,"results":"51","hashOfConfig":"37"},{"size":86,"mtime":1612555748916,"results":"52","hashOfConfig":"37"},{"size":662,"mtime":1620059216662,"results":"53","hashOfConfig":"37"},{"size":1445,"mtime":1620010949594,"results":"54","hashOfConfig":"37"},{"size":574,"mtime":1619901615946,"results":"55","hashOfConfig":"37"},{"size":567,"mtime":1619901634326,"results":"56","hashOfConfig":"37"},{"size":613,"mtime":1613151803759,"results":"57","hashOfConfig":"37"},{"size":2494,"mtime":1620006020922,"results":"58","hashOfConfig":"37"},{"size":1893,"mtime":1620023369902,"results":"59","hashOfConfig":"37"},{"size":590,"mtime":1619901608356,"results":"60","hashOfConfig":"37"},{"size":593,"mtime":1614479333158,"results":"61","hashOfConfig":"37"},{"size":4489,"mtime":1620021471023,"results":"62","hashOfConfig":"37"},{"size":3710,"mtime":1620066497725,"results":"63","hashOfConfig":"37"},{"size":1252,"mtime":1620013910742,"results":"64","hashOfConfig":"37"},{"size":8710,"mtime":1620018278786,"results":"65","hashOfConfig":"37"},{"size":3577,"mtime":1620018310572,"results":"66","hashOfConfig":"37"},{"size":6226,"mtime":1620018265475,"results":"67","hashOfConfig":"37"},{"size":1097,"mtime":1620021887386,"results":"68","hashOfConfig":"37"},{"size":929,"mtime":1620018708324,"results":"69","hashOfConfig":"37"},{"size":1610,"mtime":1620023128689,"results":"70","hashOfConfig":"37"},{"size":2899,"mtime":1620063227497,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"hpuued",{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\index.js",[],["154","155"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\MetroApp.js",["156"],"import React, { useEffect, useReducer} from 'react';\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false };\r\n}\r\n\r\nexport const MetroApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init)\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n}","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AppRouter.js",["157"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\n\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { CreateUserScreen } from \"../components/login/CreateUserScreen\";\r\nimport { DashboardRouter } from \"./DashboardRouter\";\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { AdminRouter } from \"./AdminRouter\";\r\nimport '../styles/login.css';\r\nimport { types } from \"../types/types\";\r\nimport { LoginAdminScreen } from \"../components/login/LoginAdminScreen\";\r\n\r\nimport { PrivateAdminRoute } from \"./PrivateAdminRoute\";\r\nimport { PublicAdminRoute } from \"./PublicAdminRoute\";\r\n\r\n\r\nexport const AppRouter = () => {\r\n    const { user, dispatch } = useContext(AuthContext);\r\n    const userLogged = JSON.parse(localStorage.getItem('uid'));\r\n\r\n    const [client, setClient] = useState([]);\r\n    useEffect(() => {\r\n        getClients();\r\n    }, []);\r\n\r\n    const getClients = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`);\r\n        const body = await resp.json();\r\n        const { clients } = body;\r\n        setClient(clients);\r\n    };\r\n\r\n    let admin = client.map((admin) => {\r\n        if (admin.isAdmin) {\r\n            return (admin.uid)\r\n        }\r\n    })\r\n    let [uid] = admin;\r\n    const isAdmin = userLogged === uid ? true : false;\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user?.uid) {\r\n                dispatch({\r\n                    type: types.login,\r\n                    payload: {\r\n                        name: user.displayName,\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={user.logged && !isAdmin} />\r\n                <PublicRoute exact path=\"/create-user\" component={CreateUserScreen} isAuthenticated={user.logged && !isAdmin} />\r\n\r\n                <PublicAdminRoute exact path=\"/admin/login\" component={LoginAdminScreen} isAuthenticated={user.logged && isAdmin} />\r\n                <PrivateAdminRoute path=\"/admin\" component={AdminRouter} isAuthenticated={user.logged && isAdmin} />\r\n\r\n                <PrivateRoute path=\"/\" component={DashboardRouter} isAuthenticated={user.logged && !isAdmin} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\DashboardRouter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\CreateUserScreen.js",["158"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport { firebase } from '../../firebase/firebase-config';\r\n\r\nexport const CreateUserScreen = () => {\r\n\r\n    const [values, handleInputChange,] = useForm({\r\n        name: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        uid: '',\r\n    });\r\n\r\n    const { email, password, name, lastName, uid } = values;\r\n    const formValid = () => {\r\n        if (name.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a name',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (lastName.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a Last Name',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (email.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'Enter an email',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (password.trim().length < 6) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'The password must be greater than 6 digits',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (formValid()) {\r\n            firebase.auth().createUserWithEmailAndPassword(email, password)\r\n                .then(async ({ user }) => {\r\n                    localStorage.setItem('uid', JSON.stringify(user.uid));\r\n                    localStorage.setItem('email', JSON.stringify(user.email));\r\n                    await user.updateProfile({ displayName: name });\r\n                    addClient();\r\n                })\r\n                .catch(e => {\r\n                    Swal.fire('Error', e.message, 'error');\r\n                });\r\n        };\r\n    }\r\n\r\n    const addClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                uid: JSON.parse(localStorage.getItem('uid')),\r\n                name,\r\n                lastName,\r\n                password,\r\n                email\r\n            }),\r\n        });\r\n        const body = await resp.json();\r\n        localStorage.setItem('id', JSON.stringify(body._id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrap mt-3\">\r\n            <div className=\"login-html\">\r\n                <label htmlFor=\"tab-2\" className=\"tab\">Sign Up</label>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"sign-up-html\">\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"user\" className=\"label\">Name</label>\r\n                            <input\r\n                                id=\"user\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                className=\"input\"\r\n                                value={name}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Last Name</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"lastName\"\r\n                                type=\"text\"\r\n                                className=\"input\"\r\n                                value={lastName}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Email Address</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                className=\"input\"\r\n                                value={email}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Password</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                className=\"input\"\r\n                                value={password}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"button\"\r\n                                value=\"Sign Up\" />\r\n                        </div>\r\n                        <div className=\"foot-lnk\">\r\n                            <Link to=\"/Login\">Back</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\NavbarAdmin.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Navbar.js",["159","160"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\HomeArticlesScreen.js",["161","162","163"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\BuyScreen.js",["164","165","166","167","168"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { buy } from '../articles/services';\r\nimport { getProduct } from './services';\r\n\r\nexport const BuyScreen = () => {\r\n    let { id } = useParams();\r\n\r\n    const getProductList = async () => {\r\n        const resp = await getProduct(id);\r\n        const body = await resp.json();\r\n        setProduct({\r\n            ...body,\r\n            productId: body._id\r\n        });\r\n    }\r\n\r\n    const [product, setProduct] = useState({});\r\n    let { _id, description, name, price, quantityInStock, spent, urlImg, category } = product;\r\n\r\n    useEffect(() => {\r\n        getProductList();\r\n    }, [() => buy()]);\r\n\r\n    const buyProduct = async (product) => {\r\n        const resp = await buy(product);\r\n        const data = await resp.json();\r\n        // getProductsList();\r\n    }\r\n\r\n    const getState = (state) => {\r\n        if (state) {\r\n            return (\r\n                <button className=\"btn btn-success btn-block\" >\r\n                    Buy\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button className=\"btn btn-secondary btn-block\" disabled>\r\n                    Spent\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n    const back = () => {\r\n        window.history.back()\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"card mt-3\">\r\n                    <div className=\"row g-0\">\r\n                        <div className=\"col-md-7\">\r\n                            <img src={urlImg} className=\"img-fluid\" />\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\"><kbd>{name}</kbd></h4>\r\n                                <h5 className=\"card-subtitle mb-2 font-weight-bold text-danger mt-2\"><font size=\"4\" color=\"red\">P</font><font size=\"4\">rice: </font><mark>$ {price}</mark></h5>\r\n                                <p className=\"card-subtitle mt-2\"><font size=\"3\" color=\"black\">Category: <em>{category}</em></font></p>\r\n                                <p className=\"card-text mt-2\"><font size=\"3\" color=\"black\">Description:</font><font size=\"3\" color=\"gray\">{description}</font></p>\r\n                                <h5><font size=\"3\" color=\"black\"> Quantity In Stock </font></h5>\r\n                                <p className=\"card-text\"><font size=\"4\" color=\"red\"><em>{quantityInStock}</em></font></p>\r\n                                <hr />\r\n                            </div>\r\n                            <div onClick={() => buyProduct(product)}>{getState(spent)}</div>\r\n                            <button onClick={() => back()} type=\"button\" className=\"btn btn-danger btn-sm btn-block mt-2\">Back</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useCounter.js",[],["169","170"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\hooks\\useForm.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\firebase\\firebase-config.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\authReducer.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\types\\types.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\AuthContext.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\auth\\clientAuth.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdminRouter.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\AdministratorRoute.js",[],["171","172"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\AdminClientScreen.js",["173","174"],"import React, { useEffect, useState } from 'react'\r\nimport { deleteClient, getClients } from '../adminClient/services';\r\n\r\nexport const AdminClientScreen = () => {\r\n    const [client, setClient] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getClientsList();\r\n    }, []);\r\n\r\n    const getClientsList = async () => {\r\n        const resp = await getClients();\r\n        const body = await resp.json();\r\n        let { clients } = body;\r\n        setClient(clients);\r\n    }\r\n\r\n    const [buy] = client;\r\n\r\n    const deleteClientId = async (id) => {\r\n        const resp = await deleteClient(id);\r\n        getClientsList();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"row\" >\r\n                <div className=\"col-lg-12 col-md-12\" >\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr className=\"table-warning\">\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Last Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Buys</th>\r\n                                <th scope=\"col\">Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                client.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={item._id}>\r\n                                            <th scope=\"row\">{i + 1}</th>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.lastName}</td>\r\n                                            <td>{item.email}</td>\r\n                                            <td>{item.buy.length}</td>\r\n                                            <td>\r\n                                                <button onClick={() => deleteClientId(item._id)} className=\"btn btn-outline-danger btn-sm btn-block\">Delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\login\\LoginAdminScreen.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PrivateAdminRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\routers\\PublicAdminRoute.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\ProductScreen.js",["175","176","177","178"],"import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { getProductClient, deleteProduct, updateProduct } from \"../buy/services\";\r\n\r\nexport const ProductScreen = () => {\r\n\r\n    const getProductClientId = async () => {\r\n        const resp = await getProductClient();\r\n        const body = await resp.json();\r\n        let { buy } = body;\r\n        setProduct(buy);\r\n    }\r\n\r\n    const [products, setProduct] = useState([]);\r\n\r\n    let productsFront = products.map(item => {\r\n        return {\r\n            ...item,\r\n            counter: item.amount,\r\n            id: item._id\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n    }, [() => allFunction()]);\r\n\r\n    useEffect(() => {\r\n        getProductClientId();\r\n    }, []);\r\n\r\n    const deleteProductId = async (id) => {\r\n        const resp = await deleteProduct(id);\r\n        const body = await resp.json();\r\n    }\r\n\r\n    const updateProductId = async (product, id) => {\r\n        const resp = await updateProduct(product, id);\r\n        const data = await resp.json();\r\n    }\r\n\r\n    const allFunction = (id, product) => {\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Product Removed',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n        })\r\n        deleteProductId(id);\r\n        updateProductId(product, id);\r\n        getProductClientId(id);\r\n    }\r\n    const back = () => {\r\n        window.history.back()\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                productsFront.length > 0\r\n                    ?\r\n                    <div className=\"container\">\r\n                        <button onClick={() => back()} type=\"button\" className=\"btn btn-danger btn-sm mt-3\">Back</button>\r\n                        <div className=\"card mt-3\">\r\n                            {\r\n                                productsFront.map((item) => {\r\n                                    return (\r\n                                        <div className=\"row g-0\" key={item._id}>\r\n                                            <div className=\"col-md m-4\">\r\n                                                <img src={item.urlImg} width=\"400px\" className=\"img-fluid\" />\r\n                                            </div>\r\n                                            <div className=\"col-md-7 m-2\">\r\n                                                <div className=\"card-body\">\r\n                                                    <h4 className=\"card-title\"><kbd>{item.name}</kbd></h4>\r\n                                                    <hr />\r\n                                                    <h6 className=\"card-subtitle mb-2 font-weight-bold text-danger\"><font size=\"4\" color=\"red\">P</font><font size=\"3\"></font><font size=\"4\">rice: </font><mark>$ {item.price}</mark></h6>\r\n                                                    <p className=\"card-subtitle mb-2\"><font size=\"3\" color=\"Navy\">Description:</font> <font size=\"3\" color=\"black\">{item.description}</font></p>\r\n                                                    <h6><font size=\"3\" color=\"black\"> <strong>Category: </strong></font><em><font size=\"3\" color=\"black\">{item.category}</font></em></h6>\r\n                                                    <h5><font size=\"3\" color=\"black\"> Quantity In Stock </font><font size=\"4\" color=\"red\"><em>{item.quantityInStock}</em></font></h5>\r\n                                                    <p className=\"card-text\"><font size=\"3\" color=\"black\">Amount: {item.amount}</font></p>\r\n                                                    <hr />\r\n                                                </div>\r\n                                                <button onClick={() => allFunction(item._id, item)} className=\"btn btn-warning btn-sm btn-block\">Remover from my list</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"container\">\r\n                        <div className=\"card-center mt-3\">\r\n                        </div>\r\n                        <h3>You have no purchase</h3>\r\n                        <button onClick={() => back()} type=\"button\" className=\"btn btn-danger btn-sm\">Back</button>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\category\\CategoryScreen.js",["179","180","181","182"],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\userInterface\\Sidebar.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\NewProduct.js",["183","184"],"import React, { useEffect, useState } from 'react';\r\nimport { useForm } from '../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport { getCategory, newProduct } from './services';\r\n\r\nexport const NewProduct = () => {\r\n    useEffect(() => {\r\n        getCategoryList();\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (formValid()) {\r\n            createProduct();\r\n        }\r\n    }\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        name: '',\r\n        categoryId: '',\r\n        description: '',\r\n        price: '',\r\n        quantityInStock: '',\r\n        urlImg: '',\r\n        amount: 1\r\n    });\r\n\r\n    const { name, price, description, quantityInStock, urlImg, category: categoryId } = values || {};\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const getCategoryList = async () => {\r\n        const resp = await getCategory();\r\n        const body = await resp.json();\r\n        setCategories(body);\r\n    }\r\n\r\n    const createProduct = async () => {\r\n        const resp = await newProduct(values);\r\n    }\r\n\r\n    const formValid = () => {\r\n        if (name.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a name',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (description.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a description',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        }\r\n        else if (price.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a price for the product',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (values.categoryId.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must select a category',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (quantityInStock.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a quantity In Stock',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (urlImg.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a url',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const back = () => {\r\n        window.history.back()\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"login-area col col-lg-6 col-md-8 col-sm-11\">\r\n                        <div className=\"box\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <fieldset>\r\n                                    <legend>Create a Product</legend>\r\n                                    <div className=\"form-group row\">\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Name..\"\r\n                                            value={name}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"description\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Description..\"\r\n                                            value={description}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            min=\"0\"\r\n                                            name=\"price\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Example 9999\"\r\n                                            value={price}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name Category</label>\r\n                                        <select\r\n                                            name=\"categoryId\"\r\n                                            className=\"form-control form-control-sm\"\r\n                                            onChange={handleInputChange}\r\n                                        >\r\n                                            <option value=\"0\">Seleccione categoria</option>\r\n                                            {\r\n                                                categories && categories.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item._id} value={item._id}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Quantity In Stock</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            name=\"quantityInStock\"\r\n                                            min=\"1\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Quantity In Stock...\"\r\n                                            value={quantityInStock}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Url Image</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"urlImg\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Url Image\"\r\n                                            value={urlImg}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-info btn-sm btn-block\" onClick={() => back()}>Create</button>\r\n                                    <button onClick={() => back()} type=\"button\" className=\"btn btn-danger btn-sm btn-block\">Back</button>\r\n                                </fieldset>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\AdminCategoryScreen.js",["185","186"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getProductCategory, deleteProduct } from '../adminCategory/services';\r\n\r\nexport const AdminCategoryScreen = () => {\r\n    useEffect(() => {\r\n        getProductCategoryList();\r\n    }, []);\r\n\r\n    let { id } = useParams();\r\n    const [category, setCategory] = useState();\r\n\r\n    const getProductCategoryList = async () => {\r\n        const resp = await getProductCategory(id);\r\n        const body = await resp.json();\r\n        setCategory(body);\r\n    }\r\n\r\n    const deleteProductId = async (id) => {\r\n        const resp = await deleteProduct(id);\r\n        getProductCategoryList();\r\n    }\r\n    const getState = (state) => {\r\n        if (state) {\r\n            return (\r\n                <div className=\"alert alert-success\" >\r\n                    Disponible\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"alert alert-danger\" >\r\n                    Agotado\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Link to={`/admin/createProduct`} className=\"btn btn-info btn-sm btn-block\">Crear New Product</Link>\r\n                <div className=\"col-lg-12 col-md-12 mt-2\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr className=\"table-info \">\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Description</th>\r\n                                <th scope=\"col\">Price</th>\r\n                                <th scope=\"col\">Name Category</th>\r\n                                <th scope=\"col\" >Quantity In Stock</th>\r\n                                <th scope=\"col\">Spent</th>\r\n                                <th scope=\"col\" >Url Imagen</th>\r\n                                <th scope=\"col\" >Edit/Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                category && category.map((item, i) => (\r\n                                    <tr key={item._id}>\r\n                                        <th scope=\"row\">{i + 1}</th>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.description}</td>\r\n                                        <td>{item.price}</td>\r\n                                        <td>{item.category}</td>\r\n                                        <td>{item.quantityInStock}</td>\r\n                                        <td>{getState(item.spent)}</td>\r\n                                        <td > <img src={item.urlImg} width=\"80px\" className=\"img-fluid\" alt=\"img\" /></td>\r\n                                        <td>\r\n                                            <Link to={`/admin/product/edit/${item._id}`} className=\"btn btn-info btn-sm btn-block\">Edit</Link>\r\n                                            <button onClick={() => deleteProductId(item._id)} className=\"btn btn-danger btn-sm btn-block\">Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\FormProduct.js",["187","188","189"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useForm } from '../hooks/useForm';\r\nimport { getCategory, getProduct, editProduct } from './services';\r\n\r\nexport const FormProduct = () => {\r\n    useEffect(() => {\r\n        getProductId();\r\n        getCategoryList();\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        editProductId();\r\n    }\r\n\r\n    const { id } = useParams();\r\n\r\n    const [values, handleInputChange, loadDataForm] = useForm({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        quantityInStock: '',\r\n        urlImg: ''\r\n    });\r\n\r\n    const { name, description, price, quantityInStock, urlImg } = values;\r\n\r\n    const getProductId = async () => {\r\n        const resp = await getProduct(id);\r\n        const body = await resp.json();\r\n        loadDataForm(body);\r\n    }\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const getCategoryList = async () => {\r\n        const resp = await getCategory();\r\n        const body = await resp.json();\r\n        setCategories(body);\r\n    }\r\n\r\n    const editProductId = async () => {\r\n        const resp = await editProduct(id, values);\r\n        handleGameClick();\r\n    }\r\n    const back = () => {\r\n        window.history.back()\r\n    }\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const handleGameClick = () => {\r\n        setDisabled(!disabled);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"login-area col col-lg-6 col-md-8 col-sm-11\">\r\n                        <div className=\"box\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <fieldset>\r\n                                    <legend>Edit a Product</legend>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            disabled={disabled}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"Name..\"\r\n                                            value={name}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"description\"\r\n                                            disabled={disabled}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"Description..\"\r\n                                            value={description}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            min=\"1\"\r\n                                            name=\"price\"\r\n                                            disabled={disabled}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"Price..\"\r\n                                            value={price}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Quantity In Stock</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            min=\"0\"\r\n                                            name=\"quantityInStock\"\r\n                                            disabled={disabled}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"Quantity In Stock...\"\r\n                                            value={quantityInStock}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Url Image</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"urlImg\"\r\n                                            disabled={disabled}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"Url Image\"\r\n                                            value={urlImg}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-info btn-sm mr-2\" onClick={() => handleGameClick} disabled={disabled}>Aceppt</button>\r\n                                    <button onClick={() => back()} type=\"button\" className=\"btn btn-danger btn-sm\">Back</button>\r\n                                </fieldset>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\articles\\services.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminClient\\services.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\buy\\services.js",[],"C:\\Users\\Jelsyn Ceron\\Desktop\\React_Desarrollo\\metro-workshop\\FrontEnd\\src\\components\\adminCategory\\services.js",["190"],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":15,"column":8,"nodeType":"197","endLine":15,"endColumn":10,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":40,"column":36,"nodeType":"201","messageId":"202","endLine":40,"endColumn":38},{"ruleId":"203","severity":1,"message":"204","line":17,"column":46,"nodeType":"205","messageId":"206","endLine":17,"endColumn":49},{"ruleId":"195","severity":1,"message":"207","line":24,"column":8,"nodeType":"197","endLine":24,"endColumn":10,"suggestions":"208"},{"ruleId":"203","severity":1,"message":"209","line":26,"column":12,"nodeType":"205","messageId":"206","endLine":26,"endColumn":16},{"ruleId":"203","severity":1,"message":"210","line":8,"column":12,"nodeType":"205","messageId":"206","endLine":8,"endColumn":22},{"ruleId":"203","severity":1,"message":"211","line":28,"column":15,"nodeType":"205","messageId":"206","endLine":28,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":78,"column":49,"nodeType":"214","endLine":78,"endColumn":110},{"ruleId":"203","severity":1,"message":"215","line":19,"column":11,"nodeType":"205","messageId":"206","endLine":19,"endColumn":14},{"ruleId":"195","severity":1,"message":"216","line":23,"column":8,"nodeType":"197","endLine":23,"endColumn":21,"suggestions":"217"},{"ruleId":"195","severity":1,"message":"218","line":23,"column":9,"nodeType":"201","endLine":23,"endColumn":20},{"ruleId":"203","severity":1,"message":"211","line":27,"column":15,"nodeType":"205","messageId":"206","endLine":27,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":55,"column":29,"nodeType":"214","endLine":55,"endColumn":71},{"ruleId":"191","replacedBy":"219"},{"ruleId":"193","replacedBy":"220"},{"ruleId":"191","replacedBy":"221"},{"ruleId":"193","replacedBy":"222"},{"ruleId":"203","severity":1,"message":"223","line":18,"column":12,"nodeType":"205","messageId":"206","endLine":18,"endColumn":15},{"ruleId":"203","severity":1,"message":"224","line":21,"column":15,"nodeType":"205","messageId":"206","endLine":21,"endColumn":19},{"ruleId":"195","severity":1,"message":"218","line":25,"column":9,"nodeType":"201","endLine":25,"endColumn":28},{"ruleId":"203","severity":1,"message":"209","line":33,"column":15,"nodeType":"205","messageId":"206","endLine":33,"endColumn":19},{"ruleId":"203","severity":1,"message":"211","line":38,"column":15,"nodeType":"205","messageId":"206","endLine":38,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":69,"column":49,"nodeType":"214","endLine":69,"endColumn":110},{"ruleId":"195","severity":1,"message":"225","line":11,"column":8,"nodeType":"197","endLine":11,"endColumn":10,"suggestions":"226"},{"ruleId":"195","severity":1,"message":"227","line":29,"column":8,"nodeType":"197","endLine":29,"endColumn":10,"suggestions":"228"},{"ruleId":"203","severity":1,"message":"211","line":33,"column":15,"nodeType":"205","messageId":"206","endLine":33,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":73,"column":49,"nodeType":"214","endLine":73,"endColumn":110},{"ruleId":"203","severity":1,"message":"229","line":28,"column":74,"nodeType":"205","messageId":"206","endLine":28,"endColumn":84},{"ruleId":"203","severity":1,"message":"224","line":39,"column":15,"nodeType":"205","messageId":"206","endLine":39,"endColumn":19},{"ruleId":"195","severity":1,"message":"227","line":8,"column":8,"nodeType":"197","endLine":8,"endColumn":10,"suggestions":"230"},{"ruleId":"203","severity":1,"message":"224","line":20,"column":15,"nodeType":"205","messageId":"206","endLine":20,"endColumn":19},{"ruleId":"195","severity":1,"message":"231","line":10,"column":8,"nodeType":"197","endLine":10,"endColumn":10,"suggestions":"232"},{"ruleId":"203","severity":1,"message":"210","line":35,"column":12,"nodeType":"205","messageId":"206","endLine":35,"endColumn":22},{"ruleId":"203","severity":1,"message":"224","line":44,"column":15,"nodeType":"205","messageId":"206","endLine":44,"endColumn":19},{"ruleId":"233","severity":1,"message":"234","line":94,"column":28,"nodeType":"235","messageId":"236","endLine":94,"endColumn":30},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["239"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'uid' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getClientList'. Either include it or remove the dependency array.",["240"],"'body' is assigned a value but never used.","'categories' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProductList'. Either include it or remove the dependency array.",["241"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.",["237"],["238"],["237"],["238"],"'buy' is assigned a value but never used.","'resp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCategoriesList'. Either include it or remove the dependency array.",["242"],"React Hook useEffect has a missing dependency: 'getProductCategoryList'. Either include it or remove the dependency array.",["243"],"'categoryId' is assigned a value but never used.",["244"],"React Hook useEffect has a missing dependency: 'getProductId'. Either include it or remove the dependency array.",["245"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [user]",{"range":"259","text":"260"},"Update the dependencies array to be: [getClientList]",{"range":"261","text":"262"},"Update the dependencies array to be: [getProductList]",{"range":"263","text":"264"},"Update the dependencies array to be: [getCategoriesList]",{"range":"265","text":"266"},"Update the dependencies array to be: [getProductCategoryList]",{"range":"267","text":"268"},{"range":"269","text":"268"},"Update the dependencies array to be: [getProductId]",{"range":"270","text":"271"},[500,502],"[user]",[823,825],"[getClientList]",[686,699],"[getProductList]",[355,357],"[getCategoriesList]",[854,856],"[getProductCategoryList]",[297,299],[334,336],"[getProductId]"]